// WARN: This file is auto generated by cmp_commander_xtask
{
    Commander::new()
    .version(env!("CARGO_PKG_VERSION"))
    .exec(env!("CARGO_PKG_NAME"))
    .usage("[options] <url>")
    .usage("[-h|--help|-v|--version]")
    .option_str("--abstractunixsocket [value]", "Connect via abstract Unix domain socket", None)
    .option_str("--altsvc [value]", "Enable alt-svc with this cache file", None)
    .option("--anyauth", "Pick any authentication method", None)
    .option("-a, --append", "Append to target file when uploading", None)
    .option("--basic", "Use HTTP Basic Authentication", None)
    .option_str("--cacert [value]", "CA certificate to verify peer against", None)
    .option_str("--capath [value]", "CA directory to verify peer against", None)
    .option_str("-E, --cert [value]", "Client certificate file and password", None)
    .option("--certstatus", "Verify the status of the server certificate", None)
    .option_str("--certtype [value]", "Certificate file type (DER/PEM/ENG)", None)
    .option_str("--ciphers [value]", "SSL ciphers to use", None)
    .option("--compressed", "Request compressed response", None)
    .option("--compressedssh", "Enable SSH compression", None)
    .option_str("-K, --config [value]", "Read config from a file", None)
    .option_int("--connecttimeout [value]", "Maximum time allowed for connection", None)
    .option_str("--connectto [value]", "Connect to host", None)
    .option_int("-C, --continueat [value]", "Resumed transfer offset", None)
    .option_str("-b, --cookie [value]", "Send cookies from string/file", None)
    .option_str("-c, --cookiejar [value]", "Write cookies to <filename> after operation", None)
    .option("--createdirs", "Create necessary local directory hierarchy", None)
    .option("--crlf", "Convert LF to CRLF in upload", None)
    .option_str("--crlfile [value]", "Get a CRL list in PEM format from the given file", None)
    .option_str("-d, --data [value]", "HTTP POST data", None)
    .option_str("--dataascii [value]", "HTTP POST ASCII data", None)
    .option_str("--databinary [value]", "HTTP POST binary data", None)
    .option_str("--dataraw [value]", "HTTP POST data  '@' allowed", None)
    .option_str("--dataurlencode [value]", "HTTP POST data url encoded", None)
    .option_str("--delegation [value]", "GSS-API delegation permission", None)
    .option("--digest", "Use HTTP Digest Authentication", None)
    .option("-q, --disable", "Disable .curlrc", None)
    .option("--disableeprt", "Inhibit using EPRT or LPRT", None)
    .option("--disableepsv", "Inhibit using EPSV", None)
    .option("--disallowusernameinurl", "Disallow username in url", None)
    .option_str("--dnsinterface [value]", "Interface to use for DNS requests", None)
    .option_str("--dnsipv4addr [value]", "IPv4 address to use for DNS requests", None)
    .option_str("--dnsipv6addr [value]", "IPv6 address to use for DNS requests", None)
    .option_str("--dnsservers [value]", "DNS server addrs to use", None)
    .option_str("--dohurl [value]", "Resolve host names over DOH", None)
    .option_str("-D, --dumpheader [value]", "Write the received headers to <filename>", None)
    .option_str("--egdfile [value]", "EGD socket path for random data", None)
    .option_str("--engine [value]", "Crypto engine to use", None)
    .option_str("--etagsave [value]", "Get an ETag from response header and save it to a FILE", None)
    .option_str("--etagcompare [value]", "Get an ETag from a file and send a conditional request", None)
    .option_int("--expect100timeout [value]", "How long to wait for 100-continue", None)
    .option("-f, --fail", "Fail silently (no output at all) on HTTP errors", None)
    .option("--failearly", "Fail on first transfer error  do not continue", None)
    .option("--falsestart", "Enable TLS False Start", None)
    .option_str("-F, --form [value]", "Specify multipart MIME data", None)
    .option_str("--formstring [value]", "Specify multipart MIME data", None)
    .option_str("--ftpaccount [value]", "Account data string", None)
    .option_str("--ftpalternativetouser [value]", "String to replace USER [name]", None)
    .option("--ftpcreatedirs", "Create the remote dirs if not present", None)
    .option_str("--ftpmethod [value]", "Control CWD usage", None)
    .option("--ftppasv", "Use PASV/EPSV instead of PORT", None)
    .option_str("-P, --ftpport [value]", "Use PORT instead of PASV", None)
    .option("--ftppret", "Send PRET before PASV", None)
    .option("--ftpskippasvip", "Skip the IP address for PASV", None)
    .option("--ftpsslccc", "Send CCC after authenticating", None)
    .option_str("--ftpsslcccmode [value]", "Set CCC mode", None)
    .option("--ftpsslcontrol", "Require SSL/TLS for FTP login  clear for transfer", None)
    .option("-G, --get", "Put the post data in the URL and use GET", None)
    .option("-g, --globoff", "Disable URL sequences and ranges using {} and []", None)
    .option_int("--happyeyeballstimeoutms [value]", "How long to wait in milliseconds for IPv6 before trying IPv4", None)
    .option("--haproxyprotocol", "Send HAProxy PROXY protocol v1 header", None)
    .option("-I, --head", "Show document info only", None)
    .option_str("--header [value]", "Pass custom header(s) to server", None)
    .option_str("--hostpubmd5 [value]", "Acceptable MD5 hash of the host public key", None)
    .option("--http0.9", "Allow HTTP 0.9 responses", None)
    .option("-0, --http1.0", "Use HTTP 1.0", None)
    .option("--http1.1", "Use HTTP 1.1", None)
    .option("--http2", "Use HTTP 2", None)
    .option("--http2priorknowledge", "Use HTTP 2 without HTTP/1.1 Upgrade", None)
    .option("--http3", "Use HTTP v3", None)
    .option("--ignorecontentlength", "Ignore the size of the remote resource", None)
    .option("-i, --include", "Include protocol response headers in the output", None)
    .option("-k, --insecure", "Allow insecure server connections when using SSL", None)
    .option_str("--interface [value]", "Use network INTERFACE (or address)", None)
    .option("-4, --ipv4", "Resolve names to IPv4 addresses", None)
    .option("-6, --ipv6", "Resolve names to IPv6 addresses", None)
    .option("-j, --junksessioncookies", "Ignore session cookies read from file", None)
    .option_int("--keepalivetime [value]", "Interval time for keepalive probes", None)
    .option_str("--key [value]", "Private key file name", None)
    .option_str("--keytype [value]", "Private key file type (DER/PEM/ENG)", None)
    .option_str("--krb [value]", "Enable Kerberos with security <level>", None)
    .option_str("--libcurl [value]", "Dump libcurl equivalent code of this command line", None)
    .option_int("--limitrate [value]", "Limit transfer speed to RATE", None)
    .option("-l, --listonly", "List only mode", None)
    .option_str("--localport [value]", "Force use of RANGE for local port numbers", None)
    .option("-L, --location", "Follow redirects", None)
    .option("--locationtrusted", "Like --location  and send auth to other hosts", None)
    .option_str("--loginoptions [value]", "Server login options", None)
    .option_str("--mailauth [value]", "Originator address of the original email", None)
    .option_str("--mailfrom [value]", "Mail from this address", None)
    .option_str("--mailrcpt [value]", "Mail to this address", None)
    .option("-M, --manual", "Display the full manual", None)
    .option_int("--maxfilesize [value]", "Maximum file size to download", None)
    .option_int("--maxredirs [value]", "Maximum number of redirects allowed", None)
    .option_int("-m, --maxtime [value]", "Maximum time allowed for the transfer", None)
    .option("--metalink", "Process given URLs as metalink XML file", None)
    .option("--negotiate", "Use HTTP Negotiate (SPNEGO) authentication", None)
    .option("-n, --netrc", "Must read .netrc for user name and password", None)
    .option_str("--netrcfile [value]", "Specify FILE for netrc", None)
    .option("--netrcoptional", "Use either .netrc or URL", None)
    .option("-:, --next", "Make next URL use its separate set of options", None)
    .option("--noalpn", "Disable the ALPN TLS extension", None)
    .option("-N, --nobuffer", "Disable buffering of the output stream", None)
    .option("--nokeepalive", "Disable TCP keepalive on the connection", None)
    .option("--nonpn", "Disable the NPN TLS extension", None)
    .option("--noprogressmeter", "Do not show the progress meter", None)
    .option("--nosessionid", "Disable SSL session-ID reusing", None)
    .option_str("--noproxy [value]", "List of hosts which do not use proxy", None)
    .option("--ntlm", "Use HTTP NTLM authentication", None)
    .option("--ntlmwb", "Use HTTP NTLM authentication with winbind", None)
    .option_str("--oauth2bearer [value]", "OAuth 2 Bearer Token", None)
    .option_str("-o, --output [value]", "Write to file instead of stdout", None)
    .option("-Z, --parallel", "Perform transfers in parallel", None)
    .option("--parallelimmediate", "Do not wait for multiplexing (with --parallel)", None)
    .option("--parallelmax", "Maximum concurrency for parallel transfers", None)
    .option_str("--pass [value]", "Pass phrase for the private key", None)
    .option("--pathasis", "Do not squash .. sequences in URL path", None)
    .option_str("--pinnedpubkey [value]", "FILE/HASHES Public key to verify peer against", None)
    .option("--post301", "Do not switch to GET after following a 301", None)
    .option("--post302", "Do not switch to GET after following a 302", None)
    .option("--post303", "Do not switch to GET after following a 303", None)
    .option_str("--preproxy [value]", "Use this proxy first", None)
    .option("-#, --progressbar", "Display transfer progress as a bar", None)
    .option_str("--proto [value]", "Enable/disable PROTOCOLS", None)
    .option_str("--protodefault [value]", "Use PROTOCOL for any URL missing a scheme", None)
    .option_str("--protoredir [value]", "Enable/disable PROTOCOLS on redirect", None)
    .option_str("-x, --proxy [value]", "Use this proxy", None)
    .option("--proxyanyauth", "Pick any proxy authentication method", None)
    .option("--proxybasic", "Use Basic authentication on the proxy", None)
    .option_str("--proxycacert [value]", "CA certificate to verify peer against for proxy", None)
    .option_str("--proxycapath [value]", "CA directory to verify peer against for proxy", None)
    .option_str("--proxycert [value]", "Set client certificate for proxy", None)
    .option_str("--proxycerttype [value]", "Client certificate type for HTTPS proxy", None)
    .option_str("--proxyciphers [value]", "SSL ciphers to use for proxy", None)
    .option_str("--proxycrlfile [value]", "Set a CRL list for proxy", None)
    .option("--proxydigest", "Use Digest authentication on the proxy", None)
    .option_str("--proxyheader [value]", "Pass custom header(s) to proxy", None)
    .option("--proxyinsecure", "Do HTTPS proxy connections without verifying the proxy", None)
    .option_str("--proxykey [value]", "Private key for HTTPS proxy", None)
    .option_str("--proxykeytype [value]", "Private key file type for proxy", None)
    .option("--proxynegotiate", "Use HTTP Negotiate (SPNEGO) authentication on the proxy", None)
    .option("--proxyntlm", "Use NTLM authentication on the proxy", None)
    .option_str("--proxypass [value]", "Pass phrase for the private key for HTTPS proxy", None)
    .option_str("--proxypinnedpubkey [value]", "FILE/HASHES public key to verify proxy with", None)
    .option_str("--proxyservicename [value]", "SPNEGO proxy service name", None)
    .option("--proxysslallowbeast", "Allow security flaw for interop for HTTPS proxy", None)
    .option_str("--proxytls13ciphers [value]", "TLS 1.3 ciphersuites for proxy (OpenSSL)", None)
    .option_str("--proxytlsauthtype [value]", "TLS authentication type for HTTPS proxy", None)
    .option_str("--proxytlspassword [value]", "TLS password for HTTPS proxy", None)
    .option_str("--proxytlsuser [value]", "TLS username for HTTPS proxy", None)
    .option("--proxytlsv1", "Use TLSv1 for HTTPS proxy", None)
    .option_str("-U, --proxyuser [value]", "Proxy user and password", None)
    .option_str("--proxy1.0 [value]", "Use HTTP/1.0 proxy on given port", None)
    .option("-p, --proxytunnel", "Operate through an HTTP proxy tunnel (using CONNECT)", None)
    .option_str("--pubkey [value]", "SSH Public key file name", None)
    .option("-Q, --quote", "Send command(s) to server before transfer", None)
    .option_str("--randomfile [value]", "File for reading random data from", None)
    .option_str("-r, --range [value]", "Retrieve only the bytes within RANGE", None)
    .option("--raw", "Do HTTP 'raw'; no transfer decoding", None)
    .option_str("-e, --referer [value]", "Referrer URL", None)
    .option("-J, --remoteheadername", "Use the header-provided filename", None)
    .option("-O, --remotename", "Write output to a file named as the remote file", None)
    .option("--remotenameall", "Use the remote file name for all URLs", None)
    .option("-R, --remotetime", "Set the remote file's time on the local output", None)
    .option_str("-X, --request [value]", "Specify request command to use", None)
    .option("--requesttarget", "Specify the target for this request", None)
    .option_str("--resolve [value]", "Resolve the host+port to this address", None)
    .option_int("--retry [value]", "Retry request if transient problems occur", None)
    .option("--retryconnrefused", "Retry on connection refused (use with --retry)", None)
    .option_int("--retrydelay [value]", "Wait time between retries", None)
    .option_int("--retrymaxtime [value]", "Retry only within this period", None)
    .option_str("--saslauthzid [value]", "Use this identity to act as during SASL PLAIN authentication", None)
    .option("--saslir", "Enable initial response in SASL authentication", None)
    .option_str("--servicename [value]", "SPNEGO service name", None)
    .option("-S, --showerror", "Show error even when -s is used", None)
    .option("-s, --silent", "Silent mode", None)
    .option_str("--socks4 [value]", "SOCKS4 proxy on given host + port", None)
    .option_str("--socks4a [value]", "SOCKS4a proxy on given host + port", None)
    .option_str("--socks5 [value]", "SOCKS5 proxy on given host + port", None)
    .option("--socks5basic", "Enable username/password auth for SOCKS5 proxies", None)
    .option("--socks5gssapi", "Enable GSS-API auth for SOCKS5 proxies", None)
    .option("--socks5gssapinec", "Compatibility with NEC SOCKS5 server", None)
    .option_str("--socks5gssapiservice [value]", "SOCKS5 proxy service name for GSS-API", None)
    .option_str("--socks5hostname [value]", "SOCKS5 proxy  pass host name to proxy", None)
    .option_int("-Y, --speedlimit [value]", "Stop transfers slower than this", None)
    .option_int("-y, --speedtime [value]", "Trigger 'speed-limit' abort after this time", None)
    .option("--ssl", "Try SSL/TLS", None)
    .option("--sslallowbeast", "Allow security flaw to improve interop", None)
    .option("--sslnorevoke", "Disable cert revocation checks (Schannel)", None)
    .option("--sslreqd", "Require SSL/TLS", None)
    .option("-2, --sslv2", "Use SSLv2", None)
    .option("-3, --sslv3", "Use SSLv3", None)
    .option("--stderr", "Where to redirect stderr", None)
    .option("--styledoutput", "Enable styled output for HTTP headers", None)
    .option("--suppressconnectheaders", "Suppress proxy CONNECT response headers", None)
    .option("--tcpfastopen", "Use TCP Fast Open", None)
    .option("--tcpnodelay", "Use the TCP_NODELAY option", None)
    .option_str("-t, --telnetoption [value]", "Set telnet option", None)
    .option_int("--tftpblksize [value]", "Set TFTP BLKSIZE option", None)
    .option("--tftpnooptions", "Do not send any TFTP options", None)
    .option_str("-z, --timecond [value]", "Transfer based on a time condition", None)
    .option_str("--tlsmax [value]", "Set maximum allowed TLS version", None)
    .option_str("--tls13ciphers [value]", "TLS 1.3 ciphersuites (OpenSSL)", None)
    .option_str("--tlsauthtype [value]", "TLS authentication type", None)
    .option("--tlspassword", "TLS password", None)
    .option_str("--tlsuser [value]", "TLS user name", None)
    .option("-1, --tlsv1", "Use TLSv1.0 or greater", None)
    .option("--tlsv1.0", "Use TLSv1.0 or greater", None)
    .option("--tlsv1.1", "Use TLSv1.1 or greater", None)
    .option("--tlsv1.2", "Use TLSv1.2 or greater", None)
    .option("--tlsv1.3", "Use TLSv1.3 or greater", None)
    .option("--trencoding", "Request compressed transfer encoding", None)
    .option_str("--trace [value]", "Write a debug trace to FILE", None)
    .option_str("--traceascii [value]", "Like --trace  but without hex output", None)
    .option("--tracetime", "Add time stamps to trace/verbose output", None)
    .option_str("--unixsocket [value]", "Connect through this Unix domain socket", None)
    .option_str("-T, --uploadfile [value]", "Transfer local FILE to destination", None)
    .option_str("--url [value]", "URL to work with", None)
    .option("-B, --useascii", "Use ASCII/text transfer", None)
    .option_str("-u, --user [value]", "Server user and password", None)
    .option_str("-A, --useragent [value]", "Send User-Agent <name> to server", None)
    .option("-v, --verbose", "Make the operation more talkative", None)
    .option_str("-w, --writeout [value]", "Use output FORMAT after completion", None)
    .option("--xattr", "Store metadata in extended file attributes", None)
    .parse_list_or_exit(args)

}
