// WARN: This file is auto generated by cmp_commander_xtask
{
    if let Some(s) = cmd.get_str("abstractunixsocket") {
        conf.opt_abstract_unix_socket = s;
    }
    if let Some(s) = cmd.get_str("altsvc") {
        conf.opt_alt_svc = s;
    }
    if cmd.get("anyauth").is_some() {
        conf.flg_anyauth = true;
    }
    if cmd.get("append").is_some() {
        conf.flg_append = true;
    }
    if cmd.get("basic").is_some() {
        conf.flg_basic = true;
    }
    if let Some(s) = cmd.get_str("cacert") {
        conf.opt_cacert = s;
    }
    if let Some(s) = cmd.get_str("capath") {
        conf.opt_capath = s;
    }
    if let Some(s) = cmd.get_str("cert") {
        conf.opt_cert = s;
    }
    if cmd.get("certstatus").is_some() {
        conf.flg_cert_status = true;
    }
    if let Some(s) = cmd.get_str("certtype") {
        conf.opt_cert_type = s;
    }
    if let Some(s) = cmd.get_str("ciphers") {
        conf.opt_ciphers = s;
    }
    if cmd.get("compressed").is_some() {
        conf.flg_compressed = true;
    }
    if cmd.get("compressedssh").is_some() {
        conf.flg_compressed_ssh = true;
    }
    if let Some(s) = cmd.get_str("config") {
        conf.opt_config = s;
    }
    if let Some(i) = cmd.get_int("connecttimeout") {
        conf.opt_connect_timeout = i as u32;
    }
    if let Some(s) = cmd.get_str("connectto") {
        conf.opt_connect_to = s;
    }
    if let Some(i) = cmd.get_int("continueat") {
        conf.opt_continue_at = i as u64;
    }
    if let Some(s) = cmd.get_str("cookie") {
        conf.opt_cookie = s;
    }
    if let Some(s) = cmd.get_str("cookiejar") {
        conf.opt_cookie_jar = s;
    }
    if cmd.get("createdirs").is_some() {
        conf.flg_create_dirs = true;
    }
    if cmd.get("crlf").is_some() {
        conf.flg_crlf = true;
    }
    if let Some(s) = cmd.get_str("crlfile") {
        conf.opt_crlfile = s;
    }
    if let Some(s) = cmd.get_str("data") {
        conf.opt_data = s;
    }
    if let Some(s) = cmd.get_str("dataascii") {
        conf.opt_data_ascii = s;
    }
    if let Some(s) = cmd.get_str("databinary") {
        conf.opt_data_binary = s;
    }
    if let Some(s) = cmd.get_str("dataraw") {
        conf.opt_data_raw = s;
    }
    if let Some(s) = cmd.get_str("dataurlencode") {
        conf.opt_data_urlencode = s;
    }
    if let Some(s) = cmd.get_str("delegation") {
        conf.opt_delegation = s;
    }
    if cmd.get("digest").is_some() {
        conf.flg_digest = true;
    }
    if cmd.get("disable").is_some() {
        conf.flg_disable = true;
    }
    if cmd.get("disableeprt").is_some() {
        conf.flg_disable_eprt = true;
    }
    if cmd.get("disableepsv").is_some() {
        conf.flg_disable_epsv = true;
    }
    if cmd.get("disallowusernameinurl").is_some() {
        conf.flg_disallow_username_in_url = true;
    }
    if let Some(s) = cmd.get_str("dnsinterface") {
        conf.opt_dns_interface = s;
    }
    if let Some(s) = cmd.get_str("dnsipv4addr") {
        conf.opt_dns_ipv4_addr = s;
    }
    if let Some(s) = cmd.get_str("dnsipv6addr") {
        conf.opt_dns_ipv6_addr = s;
    }
    if let Some(s) = cmd.get_str("dnsservers") {
        conf.opt_dns_servers = s;
    }
    if let Some(s) = cmd.get_str("dohurl") {
        conf.opt_doh_url = s;
    }
    if let Some(s) = cmd.get_str("dumpheader") {
        conf.opt_dump_header = s;
    }
    if let Some(s) = cmd.get_str("egdfile") {
        conf.opt_egd_file = s;
    }
    if let Some(s) = cmd.get_str("engine") {
        conf.opt_engine = s;
    }
    if let Some(s) = cmd.get_str("etagsave") {
        conf.opt_etag_save = s;
    }
    if let Some(s) = cmd.get_str("etagcompare") {
        conf.opt_etag_compare = s;
    }
    if let Some(i) = cmd.get_int("expect100timeout") {
        conf.opt_expect100_timeout = i as u32;
    }
    if cmd.get("fail").is_some() {
        conf.flg_fail = true;
    }
    if cmd.get("failearly").is_some() {
        conf.flg_fail_early = true;
    }
    if cmd.get("falsestart").is_some() {
        conf.flg_false_start = true;
    }
    if let Some(s) = cmd.get_str("form") {
        conf.opt_form = s;
    }
    if let Some(s) = cmd.get_str("formstring") {
        conf.opt_form_string = s;
    }
    if let Some(s) = cmd.get_str("ftpaccount") {
        conf.opt_ftp_account = s;
    }
    if let Some(s) = cmd.get_str("ftpalternativetouser") {
        conf.opt_ftp_alternative_to_user = s;
    }
    if cmd.get("ftpcreatedirs").is_some() {
        conf.flg_ftp_create_dirs = true;
    }
    if let Some(s) = cmd.get_str("ftpmethod") {
        conf.opt_ftp_method = s;
    }
    if cmd.get("ftppasv").is_some() {
        conf.flg_ftp_pasv = true;
    }
    if let Some(s) = cmd.get_str("ftpport") {
        conf.opt_ftp_port = s;
    }
    if cmd.get("ftppret").is_some() {
        conf.flg_ftp_pret = true;
    }
    if cmd.get("ftpskippasvip").is_some() {
        conf.flg_ftp_skip_pasv_ip = true;
    }
    if cmd.get("ftpsslccc").is_some() {
        conf.flg_ftp_ssl_ccc = true;
    }
    if let Some(s) = cmd.get_str("ftpsslcccmode") {
        conf.opt_ftp_ssl_ccc_mode = s;
    }
    if cmd.get("ftpsslcontrol").is_some() {
        conf.flg_ftp_ssl_control = true;
    }
    if cmd.get("get").is_some() {
        conf.flg_get = true;
    }
    if cmd.get("globoff").is_some() {
        conf.flg_globoff = true;
    }
    if let Some(i) = cmd.get_int("happyeyeballstimeoutms") {
        conf.opt_happy_eyeballs_timeout_ms = i as u64;
    }
    if cmd.get("haproxyprotocol").is_some() {
        conf.flg_haproxy_protocol = true;
    }
    if cmd.get("head").is_some() {
        conf.flg_head = true;
    }
    if let Some(s) = cmd.get_str("header") {
        conf.opt_header = s;
    }
    if let Some(s) = cmd.get_str("hostpubmd5") {
        conf.opt_hostpubmd5 = s;
    }
    if cmd.get("http0.9").is_some() {
        conf.flg_http0_9 = true;
    }
    if cmd.get("http1.0").is_some() {
        conf.flg_http1_0 = true;
    }
    if cmd.get("http1.1").is_some() {
        conf.flg_http1_1 = true;
    }
    if cmd.get("http2").is_some() {
        conf.flg_http2 = true;
    }
    if cmd.get("http2priorknowledge").is_some() {
        conf.flg_http2_prior_knowledge = true;
    }
    if cmd.get("http3").is_some() {
        conf.flg_http3 = true;
    }
    if cmd.get("ignorecontentlength").is_some() {
        conf.flg_ignore_content_length = true;
    }
    if cmd.get("include").is_some() {
        conf.flg_include = true;
    }
    if cmd.get("insecure").is_some() {
        conf.flg_insecure = true;
    }
    if let Some(s) = cmd.get_str("interface") {
        conf.opt_interface = s;
    }
    if cmd.get("ipv4").is_some() {
        conf.flg_ipv4 = true;
    }
    if cmd.get("ipv6").is_some() {
        conf.flg_ipv6 = true;
    }
    if cmd.get("junksessioncookies").is_some() {
        conf.flg_junk_session_cookies = true;
    }
    if let Some(i) = cmd.get_int("keepalivetime") {
        conf.opt_keepalive_time = i as u32;
    }
    if let Some(s) = cmd.get_str("key") {
        conf.opt_key = s;
    }
    if let Some(s) = cmd.get_str("keytype") {
        conf.opt_key_type = s;
    }
    if let Some(s) = cmd.get_str("krb") {
        conf.opt_krb = s;
    }
    if let Some(s) = cmd.get_str("libcurl") {
        conf.opt_libcurl = s;
    }
    if let Some(i) = cmd.get_int("limitrate") {
        conf.opt_limit_rate = i as u64;
    }
    if cmd.get("listonly").is_some() {
        conf.flg_list_only = true;
    }
    if let Some(s) = cmd.get_str("localport") {
        conf.opt_local_port = s;
    }
    if cmd.get("location").is_some() {
        conf.flg_location = true;
    }
    if cmd.get("locationtrusted").is_some() {
        conf.flg_location_trusted = true;
    }
    if let Some(s) = cmd.get_str("loginoptions") {
        conf.opt_login_options = s;
    }
    if let Some(s) = cmd.get_str("mailauth") {
        conf.opt_mail_auth = s;
    }
    if let Some(s) = cmd.get_str("mailfrom") {
        conf.opt_mail_from = s;
    }
    if let Some(s) = cmd.get_str("mailrcpt") {
        conf.opt_mail_rcpt = s;
    }
    if cmd.get("manual").is_some() {
        conf.flg_manual = true;
    }
    if let Some(i) = cmd.get_int("maxfilesize") {
        conf.opt_max_filesize = i as u64;
    }
    if let Some(i) = cmd.get_int("maxredirs") {
        conf.opt_max_redirs = i as u32;
    }
    if let Some(i) = cmd.get_int("maxtime") {
        conf.opt_max_time = i as u32;
    }
    if cmd.get("metalink").is_some() {
        conf.flg_metalink = true;
    }
    if cmd.get("negotiate").is_some() {
        conf.flg_negotiate = true;
    }
    if cmd.get("netrc").is_some() {
        conf.flg_netrc = true;
    }
    if let Some(s) = cmd.get_str("netrcfile") {
        conf.opt_netrc_file = s;
    }
    if cmd.get("netrcoptional").is_some() {
        conf.flg_netrc_optional = true;
    }
    if cmd.get("next").is_some() {
        conf.flg_next = true;
    }
    if cmd.get("noalpn").is_some() {
        conf.flg_no_alpn = true;
    }
    if cmd.get("nobuffer").is_some() {
        conf.flg_no_buffer = true;
    }
    if cmd.get("nokeepalive").is_some() {
        conf.flg_no_keepalive = true;
    }
    if cmd.get("nonpn").is_some() {
        conf.flg_no_npn = true;
    }
    if cmd.get("noprogressmeter").is_some() {
        conf.flg_no_progress_meter = true;
    }
    if cmd.get("nosessionid").is_some() {
        conf.flg_no_sessionid = true;
    }
    if let Some(s) = cmd.get_str("noproxy") {
        conf.opt_noproxy = s;
    }
    if cmd.get("ntlm").is_some() {
        conf.flg_ntlm = true;
    }
    if cmd.get("ntlmwb").is_some() {
        conf.flg_ntlm_wb = true;
    }
    if let Some(s) = cmd.get_str("oauth2bearer") {
        conf.opt_oauth2_bearer = s;
    }
    if let Some(s) = cmd.get_str("output") {
        conf.opt_output = s;
    }
    if cmd.get("parallel").is_some() {
        conf.flg_parallel = true;
    }
    if cmd.get("parallelimmediate").is_some() {
        conf.flg_parallel_immediate = true;
    }
    if cmd.get("parallelmax").is_some() {
        conf.flg_parallel_max = true;
    }
    if let Some(s) = cmd.get_str("pass") {
        conf.opt_pass = s;
    }
    if cmd.get("pathasis").is_some() {
        conf.flg_path_as_is = true;
    }
    if let Some(s) = cmd.get_str("pinnedpubkey") {
        conf.opt_pinnedpubkey = s;
    }
    if cmd.get("post301").is_some() {
        conf.flg_post301 = true;
    }
    if cmd.get("post302").is_some() {
        conf.flg_post302 = true;
    }
    if cmd.get("post303").is_some() {
        conf.flg_post303 = true;
    }
    if let Some(s) = cmd.get_str("preproxy") {
        conf.opt_preproxy = s;
    }
    if cmd.get("progressbar").is_some() {
        conf.flg_progress_bar = true;
    }
    if let Some(s) = cmd.get_str("proto") {
        conf.opt_proto = s;
    }
    if let Some(s) = cmd.get_str("protodefault") {
        conf.opt_proto_default = s;
    }
    if let Some(s) = cmd.get_str("protoredir") {
        conf.opt_proto_redir = s;
    }
    if let Some(s) = cmd.get_str("proxy") {
        conf.opt_proxy = s;
    }
    if cmd.get("proxyanyauth").is_some() {
        conf.flg_proxy_anyauth = true;
    }
    if cmd.get("proxybasic").is_some() {
        conf.flg_proxy_basic = true;
    }
    if let Some(s) = cmd.get_str("proxycacert") {
        conf.opt_proxy_cacert = s;
    }
    if let Some(s) = cmd.get_str("proxycapath") {
        conf.opt_proxy_capath = s;
    }
    if let Some(s) = cmd.get_str("proxycert") {
        conf.opt_proxy_cert = s;
    }
    if let Some(s) = cmd.get_str("proxycerttype") {
        conf.opt_proxy_cert_type = s;
    }
    if let Some(s) = cmd.get_str("proxyciphers") {
        conf.opt_proxy_ciphers = s;
    }
    if let Some(s) = cmd.get_str("proxycrlfile") {
        conf.opt_proxy_crlfile = s;
    }
    if cmd.get("proxydigest").is_some() {
        conf.flg_proxy_digest = true;
    }
    if let Some(s) = cmd.get_str("proxyheader") {
        conf.opt_proxy_header = s;
    }
    if cmd.get("proxyinsecure").is_some() {
        conf.flg_proxy_insecure = true;
    }
    if let Some(s) = cmd.get_str("proxykey") {
        conf.opt_proxy_key = s;
    }
    if let Some(s) = cmd.get_str("proxykeytype") {
        conf.opt_proxy_key_type = s;
    }
    if cmd.get("proxynegotiate").is_some() {
        conf.flg_proxy_negotiate = true;
    }
    if cmd.get("proxyntlm").is_some() {
        conf.flg_proxy_ntlm = true;
    }
    if let Some(s) = cmd.get_str("proxypass") {
        conf.opt_proxy_pass = s;
    }
    if let Some(s) = cmd.get_str("proxypinnedpubkey") {
        conf.opt_proxy_pinnedpubkey = s;
    }
    if let Some(s) = cmd.get_str("proxyservicename") {
        conf.opt_proxy_service_name = s;
    }
    if cmd.get("proxysslallowbeast").is_some() {
        conf.flg_proxy_ssl_allow_beast = true;
    }
    if let Some(s) = cmd.get_str("proxytls13ciphers") {
        conf.opt_proxy_tls13_ciphers = s;
    }
    if let Some(s) = cmd.get_str("proxytlsauthtype") {
        conf.opt_proxy_tlsauthtype = s;
    }
    if let Some(s) = cmd.get_str("proxytlspassword") {
        conf.opt_proxy_tlspassword = s;
    }
    if let Some(s) = cmd.get_str("proxytlsuser") {
        conf.opt_proxy_tlsuser = s;
    }
    if cmd.get("proxytlsv1").is_some() {
        conf.flg_proxy_tlsv1 = true;
    }
    if let Some(s) = cmd.get_str("proxyuser") {
        conf.opt_proxy_user = s;
    }
    if let Some(s) = cmd.get_str("proxy1.0") {
        conf.opt_proxy1_0 = s;
    }
    if cmd.get("proxytunnel").is_some() {
        conf.flg_proxytunnel = true;
    }
    if let Some(s) = cmd.get_str("pubkey") {
        conf.opt_pubkey = s;
    }
    if cmd.get("quote").is_some() {
        conf.flg_quote = true;
    }
    if let Some(s) = cmd.get_str("randomfile") {
        conf.opt_random_file = s;
    }
    if let Some(s) = cmd.get_str("range") {
        conf.opt_range = s;
    }
    if cmd.get("raw").is_some() {
        conf.flg_raw = true;
    }
    if let Some(s) = cmd.get_str("referer") {
        conf.opt_referer = s;
    }
    if cmd.get("remoteheadername").is_some() {
        conf.flg_remote_header_name = true;
    }
    if cmd.get("remotename").is_some() {
        conf.flg_remote_name = true;
    }
    if cmd.get("remotenameall").is_some() {
        conf.flg_remote_name_all = true;
    }
    if cmd.get("remotetime").is_some() {
        conf.flg_remote_time = true;
    }
    if let Some(s) = cmd.get_str("request") {
        conf.opt_request = s;
    }
    if cmd.get("requesttarget").is_some() {
        conf.flg_request_target = true;
    }
    if let Some(s) = cmd.get_str("resolve") {
        conf.opt_resolve = s;
    }
    if let Some(i) = cmd.get_int("retry") {
        conf.opt_retry = i as u32;
    }
    if cmd.get("retryconnrefused").is_some() {
        conf.flg_retry_connrefused = true;
    }
    if let Some(i) = cmd.get_int("retrydelay") {
        conf.opt_retry_delay = i as u32;
    }
    if let Some(i) = cmd.get_int("retrymaxtime") {
        conf.opt_retry_max_time = i as u32;
    }
    if let Some(s) = cmd.get_str("saslauthzid") {
        conf.opt_sasl_authzid = s;
    }
    if cmd.get("saslir").is_some() {
        conf.flg_sasl_ir = true;
    }
    if let Some(s) = cmd.get_str("servicename") {
        conf.opt_service_name = s;
    }
    if cmd.get("showerror").is_some() {
        conf.flg_show_error = true;
    }
    if cmd.get("silent").is_some() {
        conf.flg_silent = true;
    }
    if let Some(s) = cmd.get_str("socks4") {
        conf.opt_socks4 = s;
    }
    if let Some(s) = cmd.get_str("socks4a") {
        conf.opt_socks4a = s;
    }
    if let Some(s) = cmd.get_str("socks5") {
        conf.opt_socks5 = s;
    }
    if cmd.get("socks5basic").is_some() {
        conf.flg_socks5_basic = true;
    }
    if cmd.get("socks5gssapi").is_some() {
        conf.flg_socks5_gssapi = true;
    }
    if cmd.get("socks5gssapinec").is_some() {
        conf.flg_socks5_gssapi_nec = true;
    }
    if let Some(s) = cmd.get_str("socks5gssapiservice") {
        conf.opt_socks5_gssapi_service = s;
    }
    if let Some(s) = cmd.get_str("socks5hostname") {
        conf.opt_socks5_hostname = s;
    }
    if let Some(i) = cmd.get_int("speedlimit") {
        conf.opt_speed_limit = i as u64;
    }
    if let Some(i) = cmd.get_int("speedtime") {
        conf.opt_speed_time = i as u32;
    }
    if cmd.get("ssl").is_some() {
        conf.flg_ssl = true;
    }
    if cmd.get("sslallowbeast").is_some() {
        conf.flg_ssl_allow_beast = true;
    }
    if cmd.get("sslnorevoke").is_some() {
        conf.flg_ssl_no_revoke = true;
    }
    if cmd.get("sslreqd").is_some() {
        conf.flg_ssl_reqd = true;
    }
    if cmd.get("sslv2").is_some() {
        conf.flg_sslv2 = true;
    }
    if cmd.get("sslv3").is_some() {
        conf.flg_sslv3 = true;
    }
    if cmd.get("stderr").is_some() {
        conf.flg_stderr = true;
    }
    if cmd.get("styledoutput").is_some() {
        conf.flg_styled_output = true;
    }
    if cmd.get("suppressconnectheaders").is_some() {
        conf.flg_suppress_connect_headers = true;
    }
    if cmd.get("tcpfastopen").is_some() {
        conf.flg_tcp_fastopen = true;
    }
    if cmd.get("tcpnodelay").is_some() {
        conf.flg_tcp_nodelay = true;
    }
    if let Some(s) = cmd.get_str("telnetoption") {
        conf.opt_telnet_option = s;
    }
    if let Some(i) = cmd.get_int("tftpblksize") {
        conf.opt_tftp_blksize = i as u32;
    }
    if cmd.get("tftpnooptions").is_some() {
        conf.flg_tftp_no_options = true;
    }
    if let Some(s) = cmd.get_str("timecond") {
        conf.opt_time_cond = s;
    }
    if let Some(s) = cmd.get_str("tlsmax") {
        conf.opt_tls_max = s;
    }
    if let Some(s) = cmd.get_str("tls13ciphers") {
        conf.opt_tls13_ciphers = s;
    }
    if let Some(s) = cmd.get_str("tlsauthtype") {
        conf.opt_tlsauthtype = s;
    }
    if cmd.get("tlspassword").is_some() {
        conf.flg_tlspassword = true;
    }
    if let Some(s) = cmd.get_str("tlsuser") {
        conf.opt_tlsuser = s;
    }
    if cmd.get("tlsv1").is_some() {
        conf.flg_tlsv1 = true;
    }
    if cmd.get("tlsv1.0").is_some() {
        conf.flg_tlsv1_0 = true;
    }
    if cmd.get("tlsv1.1").is_some() {
        conf.flg_tlsv1_1 = true;
    }
    if cmd.get("tlsv1.2").is_some() {
        conf.flg_tlsv1_2 = true;
    }
    if cmd.get("tlsv1.3").is_some() {
        conf.flg_tlsv1_3 = true;
    }
    if cmd.get("trencoding").is_some() {
        conf.flg_tr_encoding = true;
    }
    if let Some(s) = cmd.get_str("trace") {
        conf.opt_trace = s;
    }
    if let Some(s) = cmd.get_str("traceascii") {
        conf.opt_trace_ascii = s;
    }
    if cmd.get("tracetime").is_some() {
        conf.flg_trace_time = true;
    }
    if let Some(s) = cmd.get_str("unixsocket") {
        conf.opt_unix_socket = s;
    }
    if let Some(s) = cmd.get_str("uploadfile") {
        conf.opt_upload_file = s;
    }
    if let Some(s) = cmd.get_str("url") {
        conf.opt_url = s;
    }
    if cmd.get("useascii").is_some() {
        conf.flg_use_ascii = true;
    }
    if let Some(s) = cmd.get_str("user") {
        conf.opt_user = s;
    }
    if let Some(s) = cmd.get_str("useragent") {
        conf.opt_user_agent = s;
    }
    if cmd.get("verbose").is_some() {
        conf.flg_verbose = true;
    }
    if let Some(s) = cmd.get_str("writeout") {
        conf.opt_write_out = s;
    }
    if cmd.get("xattr").is_some() {
        conf.flg_xattr = true;
    }

}
