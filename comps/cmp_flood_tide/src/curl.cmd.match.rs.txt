// WARN: This file is auto generated by flood-tide-gen
match CmdOp::from(nv.opt.num) {
    CmdOp::AbstractUnixSocket => {
        conf.opt_abstract_unix_socket = value_to_string(nv)?;
    }
    CmdOp::AltSvc => {
        conf.opt_alt_svc = value_to_string(nv)?;
    }
    CmdOp::Anyauth => {
        conf.flg_anyauth = true;
    }
    CmdOp::Append => {
        conf.flg_append = true;
    }
    CmdOp::Basic => {
        conf.flg_basic = true;
    }
    CmdOp::Cacert => {
        conf.opt_cacert = value_to_string(nv)?;
    }
    CmdOp::Capath => {
        conf.opt_capath = value_to_string(nv)?;
    }
    CmdOp::Cert => {
        conf.opt_cert = value_to_string(nv)?;
    }
    CmdOp::CertStatus => {
        conf.flg_cert_status = true;
    }
    CmdOp::CertType => {
        conf.opt_cert_type = value_to_string(nv)?;
    }
    CmdOp::Ciphers => {
        conf.opt_ciphers = value_to_string(nv)?;
    }
    CmdOp::Compressed => {
        conf.flg_compressed = true;
    }
    CmdOp::CompressedSsh => {
        conf.flg_compressed_ssh = true;
    }
    CmdOp::Config => {
        conf.opt_config = value_to_string(nv)?;
    }
    CmdOp::ConnectTimeout => {
        conf.opt_connect_timeout = value_to_u32(nv)?;
    }
    CmdOp::ConnectTo => {
        conf.opt_connect_to = value_to_string(nv)?;
    }
    CmdOp::ContinueAt => {
        conf.opt_continue_at = value_to_u64(nv)?;
    }
    CmdOp::Cookie => {
        conf.opt_cookie = value_to_string(nv)?;
    }
    CmdOp::CookieJar => {
        conf.opt_cookie_jar = value_to_string(nv)?;
    }
    CmdOp::CreateDirs => {
        conf.flg_create_dirs = true;
    }
    CmdOp::Crlf => {
        conf.flg_crlf = true;
    }
    CmdOp::Crlfile => {
        conf.opt_crlfile = value_to_string(nv)?;
    }
    CmdOp::Data => {
        conf.opt_data = value_to_string(nv)?;
    }
    CmdOp::DataAscii => {
        conf.opt_data_ascii = value_to_string(nv)?;
    }
    CmdOp::DataBinary => {
        conf.opt_data_binary = value_to_string(nv)?;
    }
    CmdOp::DataRaw => {
        conf.opt_data_raw = value_to_string(nv)?;
    }
    CmdOp::DataUrlencode => {
        conf.opt_data_urlencode = value_to_string(nv)?;
    }
    CmdOp::Delegation => {
        conf.opt_delegation = value_to_string(nv)?;
    }
    CmdOp::Digest => {
        conf.flg_digest = true;
    }
    CmdOp::Disable => {
        conf.flg_disable = true;
    }
    CmdOp::DisableEprt => {
        conf.flg_disable_eprt = true;
    }
    CmdOp::DisableEpsv => {
        conf.flg_disable_epsv = true;
    }
    CmdOp::DisallowUsernameInUrl => {
        conf.flg_disallow_username_in_url = true;
    }
    CmdOp::DnsInterface => {
        conf.opt_dns_interface = value_to_string(nv)?;
    }
    CmdOp::DnsIpv4Addr => {
        conf.opt_dns_ipv4_addr = value_to_string(nv)?;
    }
    CmdOp::DnsIpv6Addr => {
        conf.opt_dns_ipv6_addr = value_to_string(nv)?;
    }
    CmdOp::DnsServers => {
        conf.opt_dns_servers = value_to_string(nv)?;
    }
    CmdOp::DohUrl => {
        conf.opt_doh_url = value_to_string(nv)?;
    }
    CmdOp::DumpHeader => {
        conf.opt_dump_header = value_to_string(nv)?;
    }
    CmdOp::EgdFile => {
        conf.opt_egd_file = value_to_string(nv)?;
    }
    CmdOp::Engine => {
        conf.opt_engine = value_to_string(nv)?;
    }
    CmdOp::EtagSave => {
        conf.opt_etag_save = value_to_string(nv)?;
    }
    CmdOp::EtagCompare => {
        conf.opt_etag_compare = value_to_string(nv)?;
    }
    CmdOp::Expect100Timeout => {
        conf.opt_expect100_timeout = value_to_u32(nv)?;
    }
    CmdOp::Fail => {
        conf.flg_fail = true;
    }
    CmdOp::FailEarly => {
        conf.flg_fail_early = true;
    }
    CmdOp::FalseStart => {
        conf.flg_false_start = true;
    }
    CmdOp::Form => {
        conf.opt_form = value_to_string(nv)?;
    }
    CmdOp::FormString => {
        conf.opt_form_string = value_to_string(nv)?;
    }
    CmdOp::FtpAccount => {
        conf.opt_ftp_account = value_to_string(nv)?;
    }
    CmdOp::FtpAlternativeToUser => {
        conf.opt_ftp_alternative_to_user = value_to_string(nv)?;
    }
    CmdOp::FtpCreateDirs => {
        conf.flg_ftp_create_dirs = true;
    }
    CmdOp::FtpMethod => {
        conf.opt_ftp_method = value_to_string(nv)?;
    }
    CmdOp::FtpPasv => {
        conf.flg_ftp_pasv = true;
    }
    CmdOp::FtpPort => {
        conf.opt_ftp_port = value_to_string(nv)?;
    }
    CmdOp::FtpPret => {
        conf.flg_ftp_pret = true;
    }
    CmdOp::FtpSkipPasvIp => {
        conf.flg_ftp_skip_pasv_ip = true;
    }
    CmdOp::FtpSslCcc => {
        conf.flg_ftp_ssl_ccc = true;
    }
    CmdOp::FtpSslCccMode => {
        conf.opt_ftp_ssl_ccc_mode = value_to_string(nv)?;
    }
    CmdOp::FtpSslControl => {
        conf.flg_ftp_ssl_control = true;
    }
    CmdOp::Get => {
        conf.flg_get = true;
    }
    CmdOp::Globoff => {
        conf.flg_globoff = true;
    }
    CmdOp::HappyEyeballsTimeoutMs => {
        conf.opt_happy_eyeballs_timeout_ms = value_to_u64(nv)?;
    }
    CmdOp::HaproxyProtocol => {
        conf.flg_haproxy_protocol = true;
    }
    CmdOp::Head => {
        conf.flg_head = true;
    }
    CmdOp::Header => {
        conf.opt_header = value_to_string(nv)?;
    }
    CmdOp::Hostpubmd5 => {
        conf.opt_hostpubmd5 = value_to_string(nv)?;
    }
    CmdOp::Http0_9 => {
        conf.flg_http0_9 = true;
    }
    CmdOp::Http1_0 => {
        conf.flg_http1_0 = true;
    }
    CmdOp::Http1_1 => {
        conf.flg_http1_1 = true;
    }
    CmdOp::Http2 => {
        conf.flg_http2 = true;
    }
    CmdOp::Http2PriorKnowledge => {
        conf.flg_http2_prior_knowledge = true;
    }
    CmdOp::Http3 => {
        conf.flg_http3 = true;
    }
    CmdOp::IgnoreContentLength => {
        conf.flg_ignore_content_length = true;
    }
    CmdOp::Include => {
        conf.flg_include = true;
    }
    CmdOp::Insecure => {
        conf.flg_insecure = true;
    }
    CmdOp::Interface => {
        conf.opt_interface = value_to_string(nv)?;
    }
    CmdOp::Ipv4 => {
        conf.flg_ipv4 = true;
    }
    CmdOp::Ipv6 => {
        conf.flg_ipv6 = true;
    }
    CmdOp::JunkSessionCookies => {
        conf.flg_junk_session_cookies = true;
    }
    CmdOp::KeepaliveTime => {
        conf.opt_keepalive_time = value_to_u32(nv)?;
    }
    CmdOp::Key => {
        conf.opt_key = value_to_string(nv)?;
    }
    CmdOp::KeyType => {
        conf.opt_key_type = value_to_string(nv)?;
    }
    CmdOp::Krb => {
        conf.opt_krb = value_to_string(nv)?;
    }
    CmdOp::Libcurl => {
        conf.opt_libcurl = value_to_string(nv)?;
    }
    CmdOp::LimitRate => {
        conf.opt_limit_rate = value_to_u64(nv)?;
    }
    CmdOp::ListOnly => {
        conf.flg_list_only = true;
    }
    CmdOp::LocalPort => {
        conf.opt_local_port = value_to_string(nv)?;
    }
    CmdOp::Location => {
        conf.flg_location = true;
    }
    CmdOp::LocationTrusted => {
        conf.flg_location_trusted = true;
    }
    CmdOp::LoginOptions => {
        conf.opt_login_options = value_to_string(nv)?;
    }
    CmdOp::MailAuth => {
        conf.opt_mail_auth = value_to_string(nv)?;
    }
    CmdOp::MailFrom => {
        conf.opt_mail_from = value_to_string(nv)?;
    }
    CmdOp::MailRcpt => {
        conf.opt_mail_rcpt = value_to_string(nv)?;
    }
    CmdOp::Manual => {
        conf.flg_manual = true;
    }
    CmdOp::MaxFilesize => {
        conf.opt_max_filesize = value_to_u64(nv)?;
    }
    CmdOp::MaxRedirs => {
        conf.opt_max_redirs = value_to_u32(nv)?;
    }
    CmdOp::MaxTime => {
        conf.opt_max_time = value_to_u32(nv)?;
    }
    CmdOp::Metalink => {
        conf.flg_metalink = true;
    }
    CmdOp::Negotiate => {
        conf.flg_negotiate = true;
    }
    CmdOp::Netrc => {
        conf.flg_netrc = true;
    }
    CmdOp::NetrcFile => {
        conf.opt_netrc_file = value_to_string(nv)?;
    }
    CmdOp::NetrcOptional => {
        conf.flg_netrc_optional = true;
    }
    CmdOp::Next => {
        conf.flg_next = true;
    }
    CmdOp::NoAlpn => {
        conf.flg_no_alpn = true;
    }
    CmdOp::NoBuffer => {
        conf.flg_no_buffer = true;
    }
    CmdOp::NoKeepalive => {
        conf.flg_no_keepalive = true;
    }
    CmdOp::NoNpn => {
        conf.flg_no_npn = true;
    }
    CmdOp::NoProgressMeter => {
        conf.flg_no_progress_meter = true;
    }
    CmdOp::NoSessionid => {
        conf.flg_no_sessionid = true;
    }
    CmdOp::Noproxy => {
        conf.opt_noproxy = value_to_string(nv)?;
    }
    CmdOp::Ntlm => {
        conf.flg_ntlm = true;
    }
    CmdOp::NtlmWb => {
        conf.flg_ntlm_wb = true;
    }
    CmdOp::Oauth2Bearer => {
        conf.opt_oauth2_bearer = value_to_string(nv)?;
    }
    CmdOp::Output => {
        conf.opt_output = value_to_string(nv)?;
    }
    CmdOp::Parallel => {
        conf.flg_parallel = true;
    }
    CmdOp::ParallelImmediate => {
        conf.flg_parallel_immediate = true;
    }
    CmdOp::ParallelMax => {
        conf.flg_parallel_max = true;
    }
    CmdOp::Pass => {
        conf.opt_pass = value_to_string(nv)?;
    }
    CmdOp::PathAsIs => {
        conf.flg_path_as_is = true;
    }
    CmdOp::Pinnedpubkey => {
        conf.opt_pinnedpubkey = value_to_string(nv)?;
    }
    CmdOp::Post301 => {
        conf.flg_post301 = true;
    }
    CmdOp::Post302 => {
        conf.flg_post302 = true;
    }
    CmdOp::Post303 => {
        conf.flg_post303 = true;
    }
    CmdOp::Preproxy => {
        conf.opt_preproxy = value_to_string(nv)?;
    }
    CmdOp::ProgressBar => {
        conf.flg_progress_bar = true;
    }
    CmdOp::Proto => {
        conf.opt_proto = value_to_string(nv)?;
    }
    CmdOp::ProtoDefault => {
        conf.opt_proto_default = value_to_string(nv)?;
    }
    CmdOp::ProtoRedir => {
        conf.opt_proto_redir = value_to_string(nv)?;
    }
    CmdOp::Proxy => {
        conf.opt_proxy = value_to_string(nv)?;
    }
    CmdOp::ProxyAnyauth => {
        conf.flg_proxy_anyauth = true;
    }
    CmdOp::ProxyBasic => {
        conf.flg_proxy_basic = true;
    }
    CmdOp::ProxyCacert => {
        conf.opt_proxy_cacert = value_to_string(nv)?;
    }
    CmdOp::ProxyCapath => {
        conf.opt_proxy_capath = value_to_string(nv)?;
    }
    CmdOp::ProxyCert => {
        conf.opt_proxy_cert = value_to_string(nv)?;
    }
    CmdOp::ProxyCertType => {
        conf.opt_proxy_cert_type = value_to_string(nv)?;
    }
    CmdOp::ProxyCiphers => {
        conf.opt_proxy_ciphers = value_to_string(nv)?;
    }
    CmdOp::ProxyCrlfile => {
        conf.opt_proxy_crlfile = value_to_string(nv)?;
    }
    CmdOp::ProxyDigest => {
        conf.flg_proxy_digest = true;
    }
    CmdOp::ProxyHeader => {
        conf.opt_proxy_header = value_to_string(nv)?;
    }
    CmdOp::ProxyInsecure => {
        conf.flg_proxy_insecure = true;
    }
    CmdOp::ProxyKey => {
        conf.opt_proxy_key = value_to_string(nv)?;
    }
    CmdOp::ProxyKeyType => {
        conf.opt_proxy_key_type = value_to_string(nv)?;
    }
    CmdOp::ProxyNegotiate => {
        conf.flg_proxy_negotiate = true;
    }
    CmdOp::ProxyNtlm => {
        conf.flg_proxy_ntlm = true;
    }
    CmdOp::ProxyPass => {
        conf.opt_proxy_pass = value_to_string(nv)?;
    }
    CmdOp::ProxyPinnedpubkey => {
        conf.opt_proxy_pinnedpubkey = value_to_string(nv)?;
    }
    CmdOp::ProxyServiceName => {
        conf.opt_proxy_service_name = value_to_string(nv)?;
    }
    CmdOp::ProxySslAllowBeast => {
        conf.flg_proxy_ssl_allow_beast = true;
    }
    CmdOp::ProxyTls13Ciphers => {
        conf.opt_proxy_tls13_ciphers = value_to_string(nv)?;
    }
    CmdOp::ProxyTlsauthtype => {
        conf.opt_proxy_tlsauthtype = value_to_string(nv)?;
    }
    CmdOp::ProxyTlspassword => {
        conf.opt_proxy_tlspassword = value_to_string(nv)?;
    }
    CmdOp::ProxyTlsuser => {
        conf.opt_proxy_tlsuser = value_to_string(nv)?;
    }
    CmdOp::ProxyTlsv1 => {
        conf.flg_proxy_tlsv1 = true;
    }
    CmdOp::ProxyUser => {
        conf.opt_proxy_user = value_to_string(nv)?;
    }
    CmdOp::Proxy1_0 => {
        conf.opt_proxy1_0 = value_to_string(nv)?;
    }
    CmdOp::Proxytunnel => {
        conf.flg_proxytunnel = true;
    }
    CmdOp::Pubkey => {
        conf.opt_pubkey = value_to_string(nv)?;
    }
    CmdOp::Quote => {
        conf.flg_quote = true;
    }
    CmdOp::RandomFile => {
        conf.opt_random_file = value_to_string(nv)?;
    }
    CmdOp::Range => {
        conf.opt_range = value_to_string(nv)?;
    }
    CmdOp::Raw => {
        conf.flg_raw = true;
    }
    CmdOp::Referer => {
        conf.opt_referer = value_to_string(nv)?;
    }
    CmdOp::RemoteHeaderName => {
        conf.flg_remote_header_name = true;
    }
    CmdOp::RemoteName => {
        conf.flg_remote_name = true;
    }
    CmdOp::RemoteNameAll => {
        conf.flg_remote_name_all = true;
    }
    CmdOp::RemoteTime => {
        conf.flg_remote_time = true;
    }
    CmdOp::Request => {
        conf.opt_request = value_to_string(nv)?;
    }
    CmdOp::RequestTarget => {
        conf.flg_request_target = true;
    }
    CmdOp::Resolve => {
        conf.opt_resolve = value_to_string(nv)?;
    }
    CmdOp::Retry => {
        conf.opt_retry = value_to_u32(nv)?;
    }
    CmdOp::RetryConnrefused => {
        conf.flg_retry_connrefused = true;
    }
    CmdOp::RetryDelay => {
        conf.opt_retry_delay = value_to_u32(nv)?;
    }
    CmdOp::RetryMaxTime => {
        conf.opt_retry_max_time = value_to_u32(nv)?;
    }
    CmdOp::SaslAuthzid => {
        conf.opt_sasl_authzid = value_to_string(nv)?;
    }
    CmdOp::SaslIr => {
        conf.flg_sasl_ir = true;
    }
    CmdOp::ServiceName => {
        conf.opt_service_name = value_to_string(nv)?;
    }
    CmdOp::ShowError => {
        conf.flg_show_error = true;
    }
    CmdOp::Silent => {
        conf.flg_silent = true;
    }
    CmdOp::Socks4 => {
        conf.opt_socks4 = value_to_string(nv)?;
    }
    CmdOp::Socks4a => {
        conf.opt_socks4a = value_to_string(nv)?;
    }
    CmdOp::Socks5 => {
        conf.opt_socks5 = value_to_string(nv)?;
    }
    CmdOp::Socks5Basic => {
        conf.flg_socks5_basic = true;
    }
    CmdOp::Socks5Gssapi => {
        conf.flg_socks5_gssapi = true;
    }
    CmdOp::Socks5GssapiNec => {
        conf.flg_socks5_gssapi_nec = true;
    }
    CmdOp::Socks5GssapiService => {
        conf.opt_socks5_gssapi_service = value_to_string(nv)?;
    }
    CmdOp::Socks5Hostname => {
        conf.opt_socks5_hostname = value_to_string(nv)?;
    }
    CmdOp::SpeedLimit => {
        conf.opt_speed_limit = value_to_u64(nv)?;
    }
    CmdOp::SpeedTime => {
        conf.opt_speed_time = value_to_u32(nv)?;
    }
    CmdOp::Ssl => {
        conf.flg_ssl = true;
    }
    CmdOp::SslAllowBeast => {
        conf.flg_ssl_allow_beast = true;
    }
    CmdOp::SslNoRevoke => {
        conf.flg_ssl_no_revoke = true;
    }
    CmdOp::SslReqd => {
        conf.flg_ssl_reqd = true;
    }
    CmdOp::Sslv2 => {
        conf.flg_sslv2 = true;
    }
    CmdOp::Sslv3 => {
        conf.flg_sslv3 = true;
    }
    CmdOp::Stderr => {
        conf.flg_stderr = true;
    }
    CmdOp::StyledOutput => {
        conf.flg_styled_output = true;
    }
    CmdOp::SuppressConnectHeaders => {
        conf.flg_suppress_connect_headers = true;
    }
    CmdOp::TcpFastopen => {
        conf.flg_tcp_fastopen = true;
    }
    CmdOp::TcpNodelay => {
        conf.flg_tcp_nodelay = true;
    }
    CmdOp::TelnetOption => {
        conf.opt_telnet_option = value_to_string(nv)?;
    }
    CmdOp::TftpBlksize => {
        conf.opt_tftp_blksize = value_to_u32(nv)?;
    }
    CmdOp::TftpNoOptions => {
        conf.flg_tftp_no_options = true;
    }
    CmdOp::TimeCond => {
        conf.opt_time_cond = value_to_string(nv)?;
    }
    CmdOp::TlsMax => {
        conf.opt_tls_max = value_to_string(nv)?;
    }
    CmdOp::Tls13Ciphers => {
        conf.opt_tls13_ciphers = value_to_string(nv)?;
    }
    CmdOp::Tlsauthtype => {
        conf.opt_tlsauthtype = value_to_string(nv)?;
    }
    CmdOp::Tlspassword => {
        conf.flg_tlspassword = true;
    }
    CmdOp::Tlsuser => {
        conf.opt_tlsuser = value_to_string(nv)?;
    }
    CmdOp::Tlsv1 => {
        conf.flg_tlsv1 = true;
    }
    CmdOp::Tlsv1_0 => {
        conf.flg_tlsv1_0 = true;
    }
    CmdOp::Tlsv1_1 => {
        conf.flg_tlsv1_1 = true;
    }
    CmdOp::Tlsv1_2 => {
        conf.flg_tlsv1_2 = true;
    }
    CmdOp::Tlsv1_3 => {
        conf.flg_tlsv1_3 = true;
    }
    CmdOp::TrEncoding => {
        conf.flg_tr_encoding = true;
    }
    CmdOp::Trace => {
        conf.opt_trace = value_to_string(nv)?;
    }
    CmdOp::TraceAscii => {
        conf.opt_trace_ascii = value_to_string(nv)?;
    }
    CmdOp::TraceTime => {
        conf.flg_trace_time = true;
    }
    CmdOp::UnixSocket => {
        conf.opt_unix_socket = value_to_string(nv)?;
    }
    CmdOp::UploadFile => {
        conf.opt_upload_file = value_to_string(nv)?;
    }
    CmdOp::Url => {
        conf.opt_url = value_to_string(nv)?;
    }
    CmdOp::UseAscii => {
        conf.flg_use_ascii = true;
    }
    CmdOp::User => {
        conf.opt_user = value_to_string(nv)?;
    }
    CmdOp::UserAgent => {
        conf.opt_user_agent = value_to_string(nv)?;
    }
    CmdOp::Verbose => {
        conf.flg_verbose = true;
    }
    CmdOp::WriteOut => {
        conf.opt_write_out = value_to_string(nv)?;
    }
    CmdOp::Xattr => {
        conf.flg_xattr = true;
    }
    CmdOp::Help => {
        conf.flg_help = true;
    }
    CmdOp::Version => {
        conf.flg_version = true;
    }
}
