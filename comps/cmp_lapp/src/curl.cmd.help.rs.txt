// WARN: This file is auto generated by cmp_lapp_xtask
const OPTIONS_TEXT: &str = r"Usage:
  cmp_lapp-curl [options] <URL>

Options:
      --abstract-unix-socket (string)  Connect via abstract Unix domain socket
      --alt-svc (string)    Enable alt-svc with this cache file
      --anyauth             Pick any authentication method
  -a, --append              Append to target file when uploading
      --basic               Use HTTP Basic Authentication
      --cacert (string)     CA certificate to verify peer against
      --capath (string)     CA directory to verify peer against
  -E, --cert (string)       Client certificate file and password
      --cert-status         Verify the status of the server certificate
      --cert-type (string)  Certificate file type (DER/PEM/ENG)
      --ciphers (string)    SSL ciphers to use
      --compressed          Request compressed response
      --compressed-ssh      Enable SSH compression
  -K, --config (string)     Read config from a file
      --connect-timeout (integer)   Maximum time allowed for connection
      --connect-to (string)     Connect to host
  -C, --continue-at (integer)   Resumed transfer offset
  -b, --cookie (string)     Send cookies from string/file
  -c, --cookie-jar (string)     Write cookies to (string) after operation
      --create-dirs         Create necessary local directory hierarchy
      --crlf                Convert LF to CRLF in upload
      --crlfile (string)    Get a CRL list in PEM format from the given file
  -d, --data (string)           HTTP POST data
      --data-ascii (string)     HTTP POST ASCII data
      --data-binary (string)    HTTP POST binary data
      --data-raw (string)       HTTP POST data  '@' allowed
      --data-urlencode (string)     HTTP POST data url encoded
      --delegation (string)     GSS-API delegation permission
      --digest              Use HTTP Digest Authentication
  -q, --disable             Disable .curlrc
      --disable-eprt        Inhibit using EPRT or LPRT
      --disable-epsv        Inhibit using EPSV
      --disallow-username-in-url    Disallow username in url
      --dns-interface (string)  Interface to use for DNS requests
      --dns-ipv4-addr (string)  IPv4 address to use for DNS requests
      --dns-ipv6-addr (string)  IPv6 address to use for DNS requests
      --dns-servers (string)    DNS server addrs to use
      --doh-url (string)        Resolve host names over DOH
  -D, --dump-header (string)    Write the received headers to (string)
      --egd-file (string)   EGD socket path for random data
      --engine (string)     Crypto engine to use
      --etag-save (string)  Get an ETag from response header and save it to a FILE
      --etag-compare (string)   Get an ETag from a file and send a conditional request
      --expect100-timeout (integer)       How long to wait for 100-continue
  -f, --fail                Fail silently (no output at all) on HTTP errors
      --fail-early          Fail on first transfer error  do not continue
      --false-start         Enable TLS False Start
  -F, --form (string)       Specify multipart MIME data
      --form-string (string)    Specify multipart MIME data
      --ftp-account (string)    Account data string
      --ftp-alternative-to-user (string)  String to replace USER [name]
      --ftp-create-dirs     Create the remote dirs if not present
      --ftp-method (string)     Control CWD usage
      --ftp-pasv            Use PASV/EPSV instead of PORT
  -P, --ftp-port (string)   Use PORT instead of PASV
      --ftp-pret            Send PRET before PASV
      --ftp-skip-pasv-ip    Skip the IP address for PASV
      --ftp-ssl-ccc         Send CCC after authenticating
      --ftp-ssl-ccc-mode (string)  Set CCC mode
      --ftp-ssl-control     Require SSL/TLS for FTP login  clear for transfer
  -G, --get                 Put the post data in the URL and use GET
  -g, --globoff             Disable URL sequences and ranges using {} and []
      --happy-eyeballs-timeout-ms (integer)     How long to wait in milliseconds for IPv6 before trying IPv4
      --haproxy-protocol    Send HAProxy PROXY protocol v1 header
  -I, --head                Show document info only
  -h, --header (string)     Pass custom header(s) to server
      --hostpubmd5 (string)     Acceptable MD5 hash of the host public key
      --http0-9             Allow HTTP 0.9 responses
  -0, --http1-0             Use HTTP 1.0
      --http1-1             Use HTTP 1.1
      --http2               Use HTTP 2
      --http2-prior-knowledge   Use HTTP 2 without HTTP/1.1 Upgrade
      --http3               Use HTTP v3
      --ignore-content-length   Ignore the size of the remote resource
  -i, --include             Include protocol response headers in the output
  -k, --insecure            Allow insecure server connections when using SSL
      --interface (string)  Use network INTERFACE (or address)
  -4, --ipv4                Resolve names to IPv4 addresses
  -6, --ipv6                Resolve names to IPv6 addresses
  -j, --junk-session-cookies        Ignore session cookies read from file
      --keepalive-time (integer)    Interval time for keepalive probes
      --key (string)        Private key file name
      --key-type (string)   Private key file type (DER/PEM/ENG)
      --krb (string)        Enable Kerberos with security (string)
      --libcurl (string)    Dump libcurl equivalent code of this command line
      --limit-rate (integer)        Limit transfer speed to RATE
  -l, --list-only           List only mode
      --local-port (string)     Force use of RANGE for local port numbers
  -L, --location            Follow redirects
      --location-trusted    Like --location  and send auth to other hosts
      --login-options (string)  Server login options
      --mail-auth (string)  Originator address of the original email
      --mail-from (string)  Mail from this address
      --mail-rcpt (string)  Mail to this address
  -M, --manual              Display the full manual
      --max-filesize (integer)      Maximum file size to download
      --max-redirs (integer)        Maximum number of redirects allowed
  -m, --max-time (integer)  Maximum time allowed for the transfer
      --metalink            Process given URLs as metalink XML file
      --negotiate           Use HTTP Negotiate (SPNEGO) authentication
  -n, --netrc               Must read .netrc for user name and password
      --netrc-file (string)     Specify FILE for netrc
      --netrc-optional      Use either .netrc or URL
      --next                Make next URL use its separate set of options
      --no-alpn             Disable the ALPN TLS extension
  -N, --no-buffer           Disable buffering of the output stream
      --no-keepalive        Disable TCP keepalive on the connection
      --no-npn              Disable the NPN TLS extension
      --no-progress-meter   Do not show the progress meter
      --no-sessionid        Disable SSL session-ID reusing
      --noproxy (string)    List of hosts which do not use proxy
      --ntlm                Use HTTP NTLM authentication
      --ntlm-wb             Use HTTP NTLM authentication with winbind
      --oauth2-bearer (string)  OAuth 2 Bearer Token
  -o, --output (string)     Write to file instead of stdout
  -Z, --parallel            Perform transfers in parallel
      --parallel-immediate  Do not wait for multiplexing (with --parallel)
      --parallel-max        Maximum concurrency for parallel transfers
      --pass (string)       Pass phrase for the private key
      --path-as-is          Do not squash .. sequences in URL path
      --pinnedpubkey (string)   FILE/HASHES Public key to verify peer against
      --post301             Do not switch to GET after following a 301
      --post302             Do not switch to GET after following a 302
      --post303             Do not switch to GET after following a 303
      --preproxy (string)   Use this proxy first: [protocol://]host[:port]
      --progress-bar        Display transfer progress as a bar
      --proto (string)      Enable/disable PROTOCOLS
      --proto-default (string)  Use PROTOCOL for any URL missing a scheme
      --proto-redir (string)    Enable/disable PROTOCOLS on redirect
  -x, --proxy (string)      Use this proxy: [protocol://]host[:port]
      --proxy-anyauth       Pick any proxy authentication method
      --proxy-basic         Use Basic authentication on the proxy
      --proxy-cacert (string)   CA certificate to verify peer against for proxy
      --proxy-capath (string)   CA directory to verify peer against for proxy
      --proxy-cert (string)     Set client certificate for proxy
      --proxy-cert-type (string)    Client certificate type for HTTPS proxy
      --proxy-ciphers (string)  SSL ciphers to use for proxy
      --proxy-crlfile (string)  Set a CRL list for proxy
      --proxy-digest        Use Digest authentication on the proxy
      --proxy-header (string)   Pass custom header(s) to proxy
      --proxy-insecure      Do HTTPS proxy connections without verifying the proxy
      --proxy-key (string)  Private key for HTTPS proxy
      --proxy-key-type (string)     Private key file type for proxy
      --proxy-negotiate     Use HTTP Negotiate (SPNEGO) authentication on the proxy
      --proxy-ntlm          Use NTLM authentication on the proxy
      --proxy-pass (string)     Pass phrase for the private key for HTTPS proxy
      --proxy-pinnedpubkey (string)     FILE/HASHES public key to verify proxy with
      --proxy-service-name (string)     SPNEGO proxy service name
      --proxy-ssl-allow-beast   Allow security flaw for interop for HTTPS proxy
      --proxy-tls13-ciphers (string)    TLS 1.3 ciphersuites for proxy (OpenSSL)
      --proxy-tlsauthtype (string)      TLS authentication type for HTTPS proxy
      --proxy-tlspassword (string)      TLS password for HTTPS proxy
      --proxy-tlsuser (string)          TLS username for HTTPS proxy
      --proxy-tlsv1         Use TLSv1 for HTTPS proxy
  -U, --proxy-user (string)     Proxy user and password
      --proxy1-0 (string)       Use HTTP/1.0 proxy on given port
  -p, --proxytunnel         Operate through an HTTP proxy tunnel (using CONNECT)
      --pubkey (string)     SSH Public key file name
  -Q, --quote               Send command(s) to server before transfer
      --random-file (string)    File for reading random data from
  -r, --range (string)      Retrieve only the bytes within RANGE
      --raw                 Do HTTP 'raw'; no transfer decoding
  -e, --referer (string)    Referrer URL
  -J, --remote-header-name  Use the header-provided filename
  -O, --remote-name         Write output to a file named as the remote file
      --remote-name-all     Use the remote file name for all URLs
  -R, --remote-time         Set the remote file's time on the local output
  -X, --request (string)    Specify request command to use
      --request-target      Specify the target for this request
      --resolve (string)    Resolve the host+port to this address: host:port:address[ address]...
      --retry (integer)     Retry request if transient problems occur
      --retry-connrefused   Retry on connection refused (use with --retry)
      --retry-delay (integer)       Wait time between retries
      --retry-max-time (integer)    Retry only within this period
      --sasl-authzid (string)       Use this identity to act as during SASL PLAIN authentication
      --sasl-ir             Enable initial response in SASL authentication
      --service-name (string)   SPNEGO service name
  -S, --show-error          Show error even when -s is used
  -s, --silent              Silent mode
      --socks4 (string)     SOCKS4 proxy on given host + port: host[:port]
      --socks4a (string)    SOCKS4a proxy on given host + port: host[:port]
      --socks5 (string)     SOCKS5 proxy on given host + port: host[:port]
      --socks5-basic        Enable username/password auth for SOCKS5 proxies
      --socks5-gssapi       Enable GSS-API auth for SOCKS5 proxies
      --socks5-gssapi-nec   Compatibility with NEC SOCKS5 server
      --socks5-gssapi-service (string)  SOCKS5 proxy service name for GSS-API
      --socks5-hostname (string)    SOCKS5 proxy  pass host name to proxy: host[:port]
  -Y, --speed-limit (integer)   Stop transfers slower than this
  -y, --speed-time (integer)    Trigger 'speed-limit' abort after this time
      --ssl                 Try SSL/TLS
      --ssl-allow-beast     Allow security flaw to improve interop
      --ssl-no-revoke       Disable cert revocation checks (Schannel)
      --ssl-reqd            Require SSL/TLS
  -2, --sslv2               Use SSLv2
  -3, --sslv3               Use SSLv3
      --stderr              Where to redirect stderr
      --styled-output       Enable styled output for HTTP headers
      --suppress-connect-headers    Suppress proxy CONNECT response headers
      --tcp-fastopen        Use TCP Fast Open
      --tcp-nodelay         Use the TCP_NODELAY option
  -t, --telnet-option (string)  Set telnet option
      --tftp-blksize (integer)  Set TFTP BLKSIZE option
      --tftp-no-options     Do not send any TFTP options
  -z, --time-cond (string)  Transfer based on a time condition
      --tls-max (string)    Set maximum allowed TLS version
      --tls13-ciphers (string)  TLS 1.3 ciphersuites (OpenSSL)
      --tlsauthtype (string)    TLS authentication type
      --tlspassword             TLS password
      --tlsuser (string)        TLS user name
  -1, --tlsv1               Use TLSv1.0 or greater
      --tlsv1-0             Use TLSv1.0 or greater
      --tlsv1-1             Use TLSv1.1 or greater
      --tlsv1-2             Use TLSv1.2 or greater
      --tlsv1-3             Use TLSv1.3 or greater
      --tr-encoding         Request compressed transfer encoding
      --trace (string)      Write a debug trace to FILE
      --trace-ascii (string)    Like --trace  but without hex output
      --trace-time          Add time stamps to trace/verbose output
      --unix-socket (string)    Connect through this Unix domain socket
  -T, --upload-file (string)    Transfer local FILE to destination
      --url (string)        URL to work with
  -B, --use-ascii           Use ASCII/text transfer
  -u, --user (string)       Server user and password
  -A, --user-agent (string)     Send User-Agent (string) to server
  -v, --verbose             Make the operation more talkative
  -w, --write-out (string)  Use output FORMAT after completion
      --xattr               Store metadata in extended file attributes
  -H, --help                display this help and exit
  -V, --version             output version information and exit

Arguments:
  <URL> (string)     getting url
";

#[derive(Debug, Default, PartialEq, Eq)]
pub struct CmdOptConf {
    pub opt_program: String,
    //
    pub opt_abstract_unix_socket: String,
    pub opt_alt_svc: String,
    pub flg_anyauth: bool,
    pub flg_append: bool,
    pub flg_basic: bool,
    pub opt_cacert: String,
    pub opt_capath: String,
    pub opt_cert: String,
    pub flg_cert_status: bool,
    pub opt_cert_type: String,
    pub opt_ciphers: String,
    pub flg_compressed: bool,
    pub flg_compressed_ssh: bool,
    pub opt_config: String,
    pub opt_connect_timeout: u32,
    pub opt_connect_to: String,
    pub opt_continue_at: u64,
    pub opt_cookie: String,
    pub opt_cookie_jar: String,
    pub flg_create_dirs: bool,
    pub flg_crlf: bool,
    pub opt_crlfile: String,
    pub opt_data: String,
    pub opt_data_ascii: String,
    pub opt_data_binary: String,
    pub opt_data_raw: String,
    pub opt_data_urlencode: String,
    pub opt_delegation: String,
    pub flg_digest: bool,
    pub flg_disable: bool,
    pub flg_disable_eprt: bool,
    pub flg_disable_epsv: bool,
    pub flg_disallow_username_in_url: bool,
    pub opt_dns_interface: String,
    pub opt_dns_ipv4_addr: String,
    pub opt_dns_ipv6_addr: String,
    pub opt_dns_servers: String,
    pub opt_doh_url: String,
    pub opt_dump_header: String,
    pub opt_egd_file: String,
    pub opt_engine: String,
    pub opt_etag_save: String,
    pub opt_etag_compare: String,
    pub opt_expect100_timeout: u32,
    pub flg_fail: bool,
    pub flg_fail_early: bool,
    pub flg_false_start: bool,
    pub opt_form: String,
    pub opt_form_string: String,
    pub opt_ftp_account: String,
    pub opt_ftp_alternative_to_user: String,
    pub flg_ftp_create_dirs: bool,
    pub opt_ftp_method: String,
    pub flg_ftp_pasv: bool,
    pub opt_ftp_port: String,
    pub flg_ftp_pret: bool,
    pub flg_ftp_skip_pasv_ip: bool,
    pub flg_ftp_ssl_ccc: bool,
    pub opt_ftp_ssl_ccc_mode: String,
    pub flg_ftp_ssl_control: bool,
    pub flg_get: bool,
    pub flg_globoff: bool,
    pub opt_happy_eyeballs_timeout_ms: u64,
    pub flg_haproxy_protocol: bool,
    pub flg_head: bool,
    pub opt_header: String,
    pub opt_hostpubmd5: String,
    pub flg_http0_9: bool,
    pub flg_http1_0: bool,
    pub flg_http1_1: bool,
    pub flg_http2: bool,
    pub flg_http2_prior_knowledge: bool,
    pub flg_http3: bool,
    pub flg_ignore_content_length: bool,
    pub flg_include: bool,
    pub flg_insecure: bool,
    pub opt_interface: String,
    pub flg_ipv4: bool,
    pub flg_ipv6: bool,
    pub flg_junk_session_cookies: bool,
    pub opt_keepalive_time: u32,
    pub opt_key: String,
    pub opt_key_type: String,
    pub opt_krb: String,
    pub opt_libcurl: String,
    pub opt_limit_rate: u64,
    pub flg_list_only: bool,
    pub opt_local_port: String,
    pub flg_location: bool,
    pub flg_location_trusted: bool,
    pub opt_login_options: String,
    pub opt_mail_auth: String,
    pub opt_mail_from: String,
    pub opt_mail_rcpt: String,
    pub flg_manual: bool,
    pub opt_max_filesize: u64,
    pub opt_max_redirs: u32,
    pub opt_max_time: u32,
    pub flg_metalink: bool,
    pub flg_negotiate: bool,
    pub flg_netrc: bool,
    pub opt_netrc_file: String,
    pub flg_netrc_optional: bool,
    pub flg_next: bool,
    pub flg_no_alpn: bool,
    pub flg_no_buffer: bool,
    pub flg_no_keepalive: bool,
    pub flg_no_npn: bool,
    pub flg_no_progress_meter: bool,
    pub flg_no_sessionid: bool,
    pub opt_noproxy: String,
    pub flg_ntlm: bool,
    pub flg_ntlm_wb: bool,
    pub opt_oauth2_bearer: String,
    pub opt_output: String,
    pub flg_parallel: bool,
    pub flg_parallel_immediate: bool,
    pub flg_parallel_max: bool,
    pub opt_pass: String,
    pub flg_path_as_is: bool,
    pub opt_pinnedpubkey: String,
    pub flg_post301: bool,
    pub flg_post302: bool,
    pub flg_post303: bool,
    pub opt_preproxy: String,
    pub flg_progress_bar: bool,
    pub opt_proto: String,
    pub opt_proto_default: String,
    pub opt_proto_redir: String,
    pub opt_proxy: String,
    pub flg_proxy_anyauth: bool,
    pub flg_proxy_basic: bool,
    pub opt_proxy_cacert: String,
    pub opt_proxy_capath: String,
    pub opt_proxy_cert: String,
    pub opt_proxy_cert_type: String,
    pub opt_proxy_ciphers: String,
    pub opt_proxy_crlfile: String,
    pub flg_proxy_digest: bool,
    pub opt_proxy_header: String,
    pub flg_proxy_insecure: bool,
    pub opt_proxy_key: String,
    pub opt_proxy_key_type: String,
    pub flg_proxy_negotiate: bool,
    pub flg_proxy_ntlm: bool,
    pub opt_proxy_pass: String,
    pub opt_proxy_pinnedpubkey: String,
    pub opt_proxy_service_name: String,
    pub flg_proxy_ssl_allow_beast: bool,
    pub opt_proxy_tls13_ciphers: String,
    pub opt_proxy_tlsauthtype: String,
    pub opt_proxy_tlspassword: String,
    pub opt_proxy_tlsuser: String,
    pub flg_proxy_tlsv1: bool,
    pub opt_proxy_user: String,
    pub opt_proxy1_0: String,
    pub flg_proxytunnel: bool,
    pub opt_pubkey: String,
    pub flg_quote: bool,
    pub opt_random_file: String,
    pub opt_range: String,
    pub flg_raw: bool,
    pub opt_referer: String,
    pub flg_remote_header_name: bool,
    pub flg_remote_name: bool,
    pub flg_remote_name_all: bool,
    pub flg_remote_time: bool,
    pub opt_request: String,
    pub flg_request_target: bool,
    pub opt_resolve: String,
    pub opt_retry: u32,
    pub flg_retry_connrefused: bool,
    pub opt_retry_delay: u32,
    pub opt_retry_max_time: u32,
    pub opt_sasl_authzid: String,
    pub flg_sasl_ir: bool,
    pub opt_service_name: String,
    pub flg_show_error: bool,
    pub flg_silent: bool,
    pub opt_socks4: String,
    pub opt_socks4a: String,
    pub opt_socks5: String,
    pub flg_socks5_basic: bool,
    pub flg_socks5_gssapi: bool,
    pub flg_socks5_gssapi_nec: bool,
    pub opt_socks5_gssapi_service: String,
    pub opt_socks5_hostname: String,
    pub opt_speed_limit: u64,
    pub opt_speed_time: u32,
    pub flg_ssl: bool,
    pub flg_ssl_allow_beast: bool,
    pub flg_ssl_no_revoke: bool,
    pub flg_ssl_reqd: bool,
    pub flg_sslv2: bool,
    pub flg_sslv3: bool,
    pub flg_stderr: bool,
    pub flg_styled_output: bool,
    pub flg_suppress_connect_headers: bool,
    pub flg_tcp_fastopen: bool,
    pub flg_tcp_nodelay: bool,
    pub opt_telnet_option: String,
    pub opt_tftp_blksize: u32,
    pub flg_tftp_no_options: bool,
    pub opt_time_cond: String,
    pub opt_tls_max: String,
    pub opt_tls13_ciphers: String,
    pub opt_tlsauthtype: String,
    pub flg_tlspassword: bool,
    pub opt_tlsuser: String,
    pub flg_tlsv1: bool,
    pub flg_tlsv1_0: bool,
    pub flg_tlsv1_1: bool,
    pub flg_tlsv1_2: bool,
    pub flg_tlsv1_3: bool,
    pub flg_tr_encoding: bool,
    pub opt_trace: String,
    pub opt_trace_ascii: String,
    pub flg_trace_time: bool,
    pub opt_unix_socket: String,
    pub opt_upload_file: String,
    pub opt_url: String,
    pub flg_use_ascii: bool,
    pub opt_user: String,
    pub opt_user_agent: String,
    pub flg_verbose: bool,
    pub opt_write_out: String,
    pub flg_xattr: bool,
    pub flg_help: bool,
    pub flg_version: bool,
    //
    pub arg_params: Vec<String>,
}
