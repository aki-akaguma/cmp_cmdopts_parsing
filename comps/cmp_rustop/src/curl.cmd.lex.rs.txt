// WARN: This file is auto generated by cmp_rustop_xtask
opts! {
    auto_shorts     false;
    command_name    env!("CARGO_PKG_NAME");
    help            true;
    opt opt_abstract_unix_socket:Option<String>, long:"abstract-unix-socket", desc:"Connect via abstract Unix domain socket";
    opt opt_alt_svc:Option<String>, long:"alt-svc", desc:"Enable alt-svc with this cache file";
    opt flg_anyauth:bool, long:"anyauth", desc:"Pick any authentication method";
    opt flg_append:bool, short:'a', long:"append", desc:"Append to target file when uploading";
    opt flg_basic:bool, long:"basic", desc:"Use HTTP Basic Authentication";
    opt opt_cacert:Option<String>, long:"cacert", desc:"CA certificate to verify peer against";
    opt opt_capath:Option<String>, long:"capath", desc:"CA directory to verify peer against";
    opt opt_cert:Option<String>, short:'E', long:"cert", desc:"Client certificate file and password";
    opt flg_cert_status:bool, long:"cert-status", desc:"Verify the status of the server certificate";
    opt opt_cert_type:Option<String>, long:"cert-type", desc:"Certificate file type (DER/PEM/ENG)";
    opt opt_ciphers:Option<String>, long:"ciphers", desc:"SSL ciphers to use";
    opt flg_compressed:bool, long:"compressed", desc:"Request compressed response";
    opt flg_compressed_ssh:bool, long:"compressed-ssh", desc:"Enable SSH compression";
    opt opt_config:Option<String>, short:'K', long:"config", desc:"Read config from a file";
    opt opt_connect_timeout:Option<u32>, long:"connect-timeout", desc:"Maximum time allowed for connection";
    opt opt_connect_to:Option<String>, long:"connect-to", desc:"Connect to host";
    opt opt_continue_at:Option<u64>, short:'C', long:"continue-at", desc:"Resumed transfer offset";
    opt opt_cookie:Option<String>, short:'b', long:"cookie", desc:"Send cookies from string/file";
    opt opt_cookie_jar:Option<String>, short:'c', long:"cookie-jar", desc:"after operation";
    opt flg_create_dirs:bool, long:"create-dirs", desc:"Create necessary local directory hierarchy";
    opt flg_crlf:bool, long:"crlf", desc:"Convert LF to CRLF in upload";
    opt opt_crlfile:Option<String>, long:"crlfile", desc:"Get a CRL list in PEM format from the given file";
    opt opt_data:Option<String>, short:'d', long:"data", desc:"HTTP POST data";
    opt opt_data_ascii:Option<String>, long:"data-ascii", desc:"HTTP POST ASCII data";
    opt opt_data_binary:Option<String>, long:"data-binary", desc:"HTTP POST binary data";
    opt opt_data_raw:Option<String>, long:"data-raw", desc:"HTTP POST data  '@' allowed";
    opt opt_data_urlencode:Option<String>, long:"data-urlencode", desc:"HTTP POST data url encoded";
    opt opt_delegation:Option<String>, long:"delegation", desc:"GSS-API delegation permission";
    opt flg_digest:bool, long:"digest", desc:"Use HTTP Digest Authentication";
    opt flg_disable:bool, short:'q', long:"disable", desc:"Disable .curlrc";
    opt flg_disable_eprt:bool, long:"disable-eprt", desc:"Inhibit using EPRT or LPRT";
    opt flg_disable_epsv:bool, long:"disable-epsv", desc:"Inhibit using EPSV";
    opt flg_disallow_username_in_url:bool, long:"disallow-username-in-url", desc:"Disallow username in url";
    opt opt_dns_interface:Option<String>, long:"dns-interface", desc:"Interface to use for DNS requests";
    opt opt_dns_ipv4_addr:Option<String>, long:"dns-ipv4-addr", desc:"IPv4 address to use for DNS requests";
    opt opt_dns_ipv6_addr:Option<String>, long:"dns-ipv6-addr", desc:"IPv6 address to use for DNS requests";
    opt opt_dns_servers:Option<String>, long:"dns-servers", desc:"DNS server addrs to use";
    opt opt_doh_url:Option<String>, long:"doh-url", desc:"Resolve host names over DOH";
    opt opt_dump_header:Option<String>, short:'D', long:"dump-header", desc:"Write the received headers to <filename>";
    opt opt_egd_file:Option<String>, long:"egd-file", desc:"EGD socket path for random data";
    opt opt_engine:Option<String>, long:"engine", desc:"Crypto engine to use";
    opt opt_etag_save:Option<String>, long:"etag-save", desc:"Get an ETag from response header and save it to a FILE";
    opt opt_etag_compare:Option<String>, long:"etag-compare", desc:"Get an ETag from a file and send a conditional request";
    opt opt_expect100_timeout:Option<u32>, long:"expect100-timeout", desc:"How long to wait for 100-continue";
    opt flg_fail:bool, short:'f', long:"fail", desc:"Fail silently (no output at all) on HTTP errors";
    opt flg_fail_early:bool, long:"fail-early", desc:"Fail on first transfer error  do not continue";
    opt flg_false_start:bool, long:"false-start", desc:"Enable TLS False Start";
    opt opt_form:Option<String>, short:'F', long:"form", desc:"Specify multipart MIME data";
    opt opt_form_string:Option<String>, long:"form-string", desc:"Specify multipart MIME data";
    opt opt_ftp_account:Option<String>, long:"ftp-account", desc:"Account data string";
    opt opt_ftp_alternative_to_user:Option<String>, long:"ftp-alternative-to-user", desc:"String to replace USER [name]";
    opt flg_ftp_create_dirs:bool, long:"ftp-create-dirs", desc:"Create the remote dirs if not present";
    opt opt_ftp_method:Option<String>, long:"ftp-method", desc:"Control CWD usage";
    opt flg_ftp_pasv:bool, long:"ftp-pasv", desc:"Use PASV/EPSV instead of PORT";
    opt opt_ftp_port:Option<String>, short:'P', long:"ftp-port", desc:"Use PORT instead of PASV";
    opt flg_ftp_pret:bool, long:"ftp-pret", desc:"Send PRET before PASV";
    opt flg_ftp_skip_pasv_ip:bool, long:"ftp-skip-pasv-ip", desc:"Skip the IP address for PASV";
    opt flg_ftp_ssl_ccc:bool, long:"ftp-ssl-ccc", desc:"Send CCC after authenticating";
    opt opt_ftp_ssl_ccc_mode:Option<String>, long:"ftp-ssl-ccc-mode", desc:"Set CCC mode";
    opt flg_ftp_ssl_control:bool, long:"ftp-ssl-control", desc:"Require SSL/TLS for FTP login  clear for transfer";
    opt flg_get:bool, short:'G', long:"get", desc:"Put the post data in the URL and use GET";
    opt flg_globoff:bool, short:'g', long:"globoff", desc:"Disable URL sequences and ranges using {} and []";
    opt opt_happy_eyeballs_timeout_ms:Option<u64>, long:"happy-eyeballs-timeout-ms", desc:"How long to wait in milliseconds for IPv6 before trying IPv4";
    opt flg_haproxy_protocol:bool, long:"haproxy-protocol", desc:"Send HAProxy PROXY protocol v1 header";
    opt flg_head:bool, short:'I', long:"head", desc:"Show document info only";
    opt opt_header:Option<String>, long:"header", desc:"Pass custom header(s) to server";
    opt opt_hostpubmd5:Option<String>, long:"hostpubmd5", desc:"Acceptable MD5 hash of the host public key";
    opt flg_http0_9:bool, long:"http0-9", desc:"Allow HTTP 0.9 responses";
    opt flg_http1_0:bool, short:'0', long:"http1-0", desc:"Use HTTP 1.0";
    opt flg_http1_1:bool, long:"http1-1", desc:"Use HTTP 1.1";
    opt flg_http2:bool, long:"http2", desc:"Use HTTP 2";
    opt flg_http2_prior_knowledge:bool, long:"http2-prior-knowledge", desc:"Use HTTP 2 without HTTP/1.1 Upgrade";
    opt flg_http3:bool, long:"http3", desc:"Use HTTP v3";
    opt flg_ignore_content_length:bool, long:"ignore-content-length", desc:"Ignore the size of the remote resource";
    opt flg_include:bool, short:'i', long:"include", desc:"Include protocol response headers in the output";
    opt flg_insecure:bool, short:'k', long:"insecure", desc:"Allow insecure server connections when using SSL";
    opt opt_interface:Option<String>, long:"interface", desc:"Use network INTERFACE (or address)";
    opt flg_ipv4:bool, short:'4', long:"ipv4", desc:"Resolve names to IPv4 addresses";
    opt flg_ipv6:bool, short:'6', long:"ipv6", desc:"Resolve names to IPv6 addresses";
    opt flg_junk_session_cookies:bool, short:'j', long:"junk-session-cookies", desc:"Ignore session cookies read from file";
    opt opt_keepalive_time:Option<u32>, long:"keepalive-time", desc:"Interval time for keepalive probes";
    opt opt_key:Option<String>, long:"key", desc:"Private key file name";
    opt opt_key_type:Option<String>, long:"key-type", desc:"Private key file type (DER/PEM/ENG)";
    opt opt_krb:Option<String>, long:"krb", desc:"Enable Kerberos with security <level>";
    opt opt_libcurl:Option<String>, long:"libcurl", desc:"Dump libcurl equivalent code of this command line";
    opt opt_limit_rate:Option<u64>, long:"limit-rate", desc:"Limit transfer speed to RATE";
    opt flg_list_only:bool, short:'l', long:"list-only", desc:"List only mode";
    opt opt_local_port:Option<String>, long:"local-port", desc:"Force use of RANGE for local port numbers";
    opt flg_location:bool, short:'L', long:"location", desc:"Follow redirects";
    opt flg_location_trusted:bool, long:"location-trusted", desc:"Like --location  and send auth to other hosts";
    opt opt_login_options:Option<String>, long:"login-options", desc:"Server login options";
    opt opt_mail_auth:Option<String>, long:"mail-auth", desc:"Originator address of the original email";
    opt opt_mail_from:Option<String>, long:"mail-from", desc:"Mail from this address";
    opt opt_mail_rcpt:Option<String>, long:"mail-rcpt", desc:"Mail to this address";
    opt flg_manual:bool, short:'M', long:"manual", desc:"Display the full manual";
    opt opt_max_filesize:Option<u64>, long:"max-filesize", desc:"Maximum file size to download";
    opt opt_max_redirs:Option<u32>, long:"max-redirs", desc:"Maximum number of redirects allowed";
    opt opt_max_time:Option<u32>, short:'m', long:"max-time", desc:"Maximum time allowed for the transfer";
    opt flg_metalink:bool, long:"metalink", desc:"Process given URLs as metalink XML file";
    opt flg_negotiate:bool, long:"negotiate", desc:"Use HTTP Negotiate (SPNEGO) authentication";
    opt flg_netrc:bool, short:'n', long:"netrc", desc:"Must read .netrc for user name and password";
    opt opt_netrc_file:Option<String>, long:"netrc-file", desc:"Specify FILE for netrc";
    opt flg_netrc_optional:bool, long:"netrc-optional", desc:"Use either .netrc or URL";
    opt flg_next:bool, long:"next", desc:"Make next URL use its separate set of options";
    opt flg_no_alpn:bool, long:"no-alpn", desc:"Disable the ALPN TLS extension";
    opt flg_no_buffer:bool, short:'N', long:"no-buffer", desc:"Disable buffering of the output stream";
    opt flg_no_keepalive:bool, long:"no-keepalive", desc:"Disable TCP keepalive on the connection";
    opt flg_no_npn:bool, long:"no-npn", desc:"Disable the NPN TLS extension";
    opt flg_no_progress_meter:bool, long:"no-progress-meter", desc:"Do not show the progress meter";
    opt flg_no_sessionid:bool, long:"no-sessionid", desc:"Disable SSL session-ID reusing";
    opt opt_noproxy:Option<String>, long:"noproxy", desc:"List of hosts which do not use proxy";
    opt flg_ntlm:bool, long:"ntlm", desc:"Use HTTP NTLM authentication";
    opt flg_ntlm_wb:bool, long:"ntlm-wb", desc:"Use HTTP NTLM authentication with winbind";
    opt opt_oauth2_bearer:Option<String>, long:"oauth2-bearer", desc:"OAuth 2 Bearer Token";
    opt opt_output:Option<String>, short:'o', long:"output", desc:"Write to file instead of stdout";
    opt flg_parallel:bool, short:'Z', long:"parallel", desc:"Perform transfers in parallel";
    opt flg_parallel_immediate:bool, long:"parallel-immediate", desc:"Do not wait for multiplexing (with --parallel)";
    opt flg_parallel_max:bool, long:"parallel-max", desc:"Maximum concurrency for parallel transfers";
    opt opt_pass:Option<String>, long:"pass", desc:"Pass phrase for the private key";
    opt flg_path_as_is:bool, long:"path-as-is", desc:"Do not squash .. sequences in URL path";
    opt opt_pinnedpubkey:Option<String>, long:"pinnedpubkey", desc:"FILE/HASHES Public key to verify peer against";
    opt flg_post301:bool, long:"post301", desc:"Do not switch to GET after following a 301";
    opt flg_post302:bool, long:"post302", desc:"Do not switch to GET after following a 302";
    opt flg_post303:bool, long:"post303", desc:"Do not switch to GET after following a 303";
    opt flg_preproxy:bool, long:"preproxy", desc:"[protocol://]host[:port]   Use this proxy first";
    opt flg_progress_bar:bool, long:"progress-bar", desc:"Display transfer progress as a bar";
    opt opt_proto:Option<String>, long:"proto", desc:"Enable/disable PROTOCOLS";
    opt opt_proto_default:Option<String>, long:"proto-default", desc:"Use PROTOCOL for any URL missing a scheme";
    opt opt_proto_redir:Option<String>, long:"proto-redir", desc:"Enable/disable PROTOCOLS on redirect";
    opt flg_proxy:bool, short:'x', long:"proxy", desc:"[protocol://]host[:port]      Use this proxy";
    opt flg_proxy_anyauth:bool, long:"proxy-anyauth", desc:"Pick any proxy authentication method";
    opt flg_proxy_basic:bool, long:"proxy-basic", desc:"Use Basic authentication on the proxy";
    opt opt_proxy_cacert:Option<String>, long:"proxy-cacert", desc:"CA certificate to verify peer against for proxy";
    opt opt_proxy_capath:Option<String>, long:"proxy-capath", desc:"CA directory to verify peer against for proxy";
    opt opt_proxy_cert:Option<String>, long:"proxy-cert", desc:"Set client certificate for proxy";
    opt opt_proxy_cert_type:Option<String>, long:"proxy-cert-type", desc:"Client certificate type for HTTPS proxy";
    opt opt_proxy_ciphers:Option<String>, long:"proxy-ciphers", desc:"SSL ciphers to use for proxy";
    opt opt_proxy_crlfile:Option<String>, long:"proxy-crlfile", desc:"Set a CRL list for proxy";
    opt flg_proxy_digest:bool, long:"proxy-digest", desc:"Use Digest authentication on the proxy";
    opt opt_proxy_header:Option<String>, long:"proxy-header", desc:"Pass custom header(s) to proxy";
    opt flg_proxy_insecure:bool, long:"proxy-insecure", desc:"Do HTTPS proxy connections without verifying the proxy";
    opt opt_proxy_key:Option<String>, long:"proxy-key", desc:"Private key for HTTPS proxy";
    opt opt_proxy_key_type:Option<String>, long:"proxy-key-type", desc:"Private key file type for proxy";
    opt flg_proxy_negotiate:bool, long:"proxy-negotiate", desc:"Use HTTP Negotiate (SPNEGO) authentication on the proxy";
    opt flg_proxy_ntlm:bool, long:"proxy-ntlm", desc:"Use NTLM authentication on the proxy";
    opt opt_proxy_pass:Option<String>, long:"proxy-pass", desc:"Pass phrase for the private key for HTTPS proxy";
    opt opt_proxy_pinnedpubkey:Option<String>, long:"proxy-pinnedpubkey", desc:"FILE/HASHES public key to verify proxy with";
    opt opt_proxy_service_name:Option<String>, long:"proxy-service-name", desc:"SPNEGO proxy service name";
    opt flg_proxy_ssl_allow_beast:bool, long:"proxy-ssl-allow-beast", desc:"Allow security flaw for interop for HTTPS proxy";
    opt opt_proxy_tls13_ciphers:Option<String>, long:"proxy-tls13-ciphers", desc:"TLS 1.3 ciphersuites for proxy (OpenSSL)";
    opt opt_proxy_tlsauthtype:Option<String>, long:"proxy-tlsauthtype", desc:"TLS authentication type for HTTPS proxy";
    opt opt_proxy_tlspassword:Option<String>, long:"proxy-tlspassword", desc:"TLS password for HTTPS proxy";
    opt opt_proxy_tlsuser:Option<String>, long:"proxy-tlsuser", desc:"TLS username for HTTPS proxy";
    opt flg_proxy_tlsv1:bool, long:"proxy-tlsv1", desc:"Use TLSv1 for HTTPS proxy";
    opt opt_proxy_user:Option<String>, short:'U', long:"proxy-user", desc:"Proxy user and password";
    opt opt_proxy1_0:Option<String>, long:"proxy1-0", desc:"Use HTTP/1.0 proxy on given port";
    opt flg_proxytunnel:bool, short:'p', long:"proxytunnel", desc:"Operate through an HTTP proxy tunnel (using CONNECT)";
    opt opt_pubkey:Option<String>, long:"pubkey", desc:"SSH Public key file name";
    opt flg_quote:bool, short:'Q', long:"quote", desc:"Send command(s) to server before transfer";
    opt opt_random_file:Option<String>, long:"random-file", desc:"File for reading random data from";
    opt opt_range:Option<String>, short:'r', long:"range", desc:"Retrieve only the bytes within RANGE";
    opt flg_raw:bool, long:"raw", desc:"Do HTTP 'raw'; no transfer decoding";
    opt opt_referer:Option<String>, short:'e', long:"referer", desc:"Referrer URL";
    opt flg_remote_header_name:bool, short:'J', long:"remote-header-name", desc:"Use the header-provided filename";
    opt flg_remote_name:bool, short:'O', long:"remote-name", desc:"Write output to a file named as the remote file";
    opt flg_remote_name_all:bool, long:"remote-name-all", desc:"Use the remote file name for all URLs";
    opt flg_remote_time:bool, short:'R', long:"remote-time", desc:"Set the remote file's time on the local output";
    opt opt_request:Option<String>, short:'X', long:"request", desc:"Specify request command to use";
    opt flg_request_target:bool, long:"request-target", desc:"Specify the target for this request";
    opt opt_resolve:Option<String>, long:"resolve", desc:"Resolve the host+port to this address";
    opt opt_retry:Option<u32>, long:"retry", desc:"Retry request if transient problems occur";
    opt flg_retry_connrefused:bool, long:"retry-connrefused", desc:"Retry on connection refused (use with --retry)";
    opt opt_retry_delay:Option<u32>, long:"retry-delay", desc:"Wait time between retries";
    opt opt_retry_max_time:Option<u32>, long:"retry-max-time", desc:"Retry only within this period";
    opt opt_sasl_authzid:Option<String>, long:"sasl-authzid", desc:"Use this identity to act as during SASL PLAIN authentication";
    opt flg_sasl_ir:bool, long:"sasl-ir", desc:"Enable initial response in SASL authentication";
    opt opt_service_name:Option<String>, long:"service-name", desc:"SPNEGO service name";
    opt flg_show_error:bool, short:'S', long:"show-error", desc:"Show error even when -s is used";
    opt flg_silent:bool, short:'s', long:"silent", desc:"Silent mode";
    opt opt_socks4:Option<String>, long:"socks4", desc:"SOCKS4 proxy on given host + port";
    opt opt_socks4a:Option<String>, long:"socks4a", desc:"SOCKS4a proxy on given host + port";
    opt opt_socks5:Option<String>, long:"socks5", desc:"SOCKS5 proxy on given host + port";
    opt flg_socks5_basic:bool, long:"socks5-basic", desc:"Enable username/password auth for SOCKS5 proxies";
    opt flg_socks5_gssapi:bool, long:"socks5-gssapi", desc:"Enable GSS-API auth for SOCKS5 proxies";
    opt flg_socks5_gssapi_nec:bool, long:"socks5-gssapi-nec", desc:"Compatibility with NEC SOCKS5 server";
    opt opt_socks5_gssapi_service:Option<String>, long:"socks5-gssapi-service", desc:"SOCKS5 proxy service name for GSS-API";
    opt opt_socks5_hostname:Option<String>, long:"socks5-hostname", desc:"SOCKS5 proxy  pass host name to proxy";
    opt opt_speed_limit:Option<u64>, short:'Y', long:"speed-limit", desc:"Stop transfers slower than this";
    opt opt_speed_time:Option<u32>, short:'y', long:"speed-time", desc:"Trigger 'speed-limit' abort after this time";
    opt flg_ssl:bool, long:"ssl", desc:"Try SSL/TLS";
    opt flg_ssl_allow_beast:bool, long:"ssl-allow-beast", desc:"Allow security flaw to improve interop";
    opt flg_ssl_no_revoke:bool, long:"ssl-no-revoke", desc:"Disable cert revocation checks (Schannel)";
    opt flg_ssl_reqd:bool, long:"ssl-reqd", desc:"Require SSL/TLS";
    opt flg_sslv2:bool, short:'2', long:"sslv2", desc:"Use SSLv2";
    opt flg_sslv3:bool, short:'3', long:"sslv3", desc:"Use SSLv3";
    opt flg_stderr:bool, long:"stderr", desc:"Where to redirect stderr";
    opt flg_styled_output:bool, long:"styled-output", desc:"Enable styled output for HTTP headers";
    opt flg_suppress_connect_headers:bool, long:"suppress-connect-headers", desc:"Suppress proxy CONNECT response headers";
    opt flg_tcp_fastopen:bool, long:"tcp-fastopen", desc:"Use TCP Fast Open";
    opt flg_tcp_nodelay:bool, long:"tcp-nodelay", desc:"Use the TCP_NODELAY option";
    opt opt_telnet_option:Option<String>, short:'t', long:"telnet-option", desc:"Set telnet option";
    opt opt_tftp_blksize:Option<u32>, long:"tftp-blksize", desc:"Set TFTP BLKSIZE option";
    opt flg_tftp_no_options:bool, long:"tftp-no-options", desc:"Do not send any TFTP options";
    opt opt_time_cond:Option<String>, short:'z', long:"time-cond", desc:"Transfer based on a time condition";
    opt opt_tls_max:Option<String>, long:"tls-max", desc:"Set maximum allowed TLS version";
    opt opt_tls13_ciphers:Option<String>, long:"tls13-ciphers", desc:"TLS 1.3 ciphersuites (OpenSSL)";
    opt opt_tlsauthtype:Option<String>, long:"tlsauthtype", desc:"TLS authentication type";
    opt flg_tlspassword:bool, long:"tlspassword", desc:"TLS password";
    opt opt_tlsuser:Option<String>, long:"tlsuser", desc:"TLS user name";
    opt flg_tlsv1:bool, short:'1', long:"tlsv1", desc:"Use TLSv1.0 or greater";
    opt flg_tlsv1_0:bool, long:"tlsv1-0", desc:"Use TLSv1.0 or greater";
    opt flg_tlsv1_1:bool, long:"tlsv1-1", desc:"Use TLSv1.1 or greater";
    opt flg_tlsv1_2:bool, long:"tlsv1-2", desc:"Use TLSv1.2 or greater";
    opt flg_tlsv1_3:bool, long:"tlsv1-3", desc:"Use TLSv1.3 or greater";
    opt flg_tr_encoding:bool, long:"tr-encoding", desc:"Request compressed transfer encoding";
    opt opt_trace:Option<String>, long:"trace", desc:"Write a debug trace to FILE";
    opt opt_trace_ascii:Option<String>, long:"trace-ascii", desc:"Like --trace  but without hex output";
    opt flg_trace_time:bool, long:"trace-time", desc:"Add time stamps to trace/verbose output";
    opt opt_unix_socket:Option<String>, long:"unix-socket", desc:"Connect through this Unix domain socket";
    opt opt_upload_file:Option<String>, short:'T', long:"upload-file", desc:"Transfer local FILE to destination";
    opt opt_url:Option<String>, long:"url", desc:"URL to work with";
    opt flg_use_ascii:bool, short:'B', long:"use-ascii", desc:"Use ASCII/text transfer";
    opt opt_user:Option<String>, short:'u', long:"user", desc:"Server user and password";
    opt opt_user_agent:Option<String>, short:'A', long:"user-agent", desc:"to server";
    opt flg_verbose:bool, short:'v', long:"verbose", desc:"Make the operation more talkative";
    opt opt_write_out:Option<String>, short:'w', long:"write-out", desc:"Use output FORMAT after completion";
    opt flg_xattr:bool, long:"xattr", desc:"Store metadata in extended file attributes";
    opt version:bool, short:'V', long:"version", desc:"output version information and exit";

    param input:String, name:"<URL>", desc:"url";

}
