// WARN: This file is auto generated by cmp_structopt_xtask
{
    if let Some(v) = opts.opt_abstract_unix_socket {
        conf.opt_abstract_unix_socket = v;
    }
    if let Some(v) = opts.opt_alt_svc {
        conf.opt_alt_svc = v;
    }
        conf.flg_anyauth = opts.flg_anyauth;
        conf.flg_append = opts.flg_append;
        conf.flg_basic = opts.flg_basic;
    if let Some(v) = opts.opt_cacert {
        conf.opt_cacert = v;
    }
    if let Some(v) = opts.opt_capath {
        conf.opt_capath = v;
    }
    if let Some(v) = opts.opt_cert {
        conf.opt_cert = v;
    }
        conf.flg_cert_status = opts.flg_cert_status;
    if let Some(v) = opts.opt_cert_type {
        conf.opt_cert_type = v;
    }
    if let Some(v) = opts.opt_ciphers {
        conf.opt_ciphers = v;
    }
        conf.flg_compressed = opts.flg_compressed;
        conf.flg_compressed_ssh = opts.flg_compressed_ssh;
    if let Some(v) = opts.opt_config {
        conf.opt_config = v;
    }
    if let Some(v) = opts.opt_connect_timeout {
        conf.opt_connect_timeout = v;
    }
    if let Some(v) = opts.opt_connect_to {
        conf.opt_connect_to = v;
    }
    if let Some(v) = opts.opt_continue_at {
        conf.opt_continue_at = v;
    }
    if let Some(v) = opts.opt_cookie {
        conf.opt_cookie = v;
    }
    if let Some(v) = opts.opt_cookie_jar {
        conf.opt_cookie_jar = v;
    }
        conf.flg_create_dirs = opts.flg_create_dirs;
        conf.flg_crlf = opts.flg_crlf;
    if let Some(v) = opts.opt_crlfile {
        conf.opt_crlfile = v;
    }
    if let Some(v) = opts.opt_data {
        conf.opt_data = v;
    }
    if let Some(v) = opts.opt_data_ascii {
        conf.opt_data_ascii = v;
    }
    if let Some(v) = opts.opt_data_binary {
        conf.opt_data_binary = v;
    }
    if let Some(v) = opts.opt_data_raw {
        conf.opt_data_raw = v;
    }
    if let Some(v) = opts.opt_data_urlencode {
        conf.opt_data_urlencode = v;
    }
    if let Some(v) = opts.opt_delegation {
        conf.opt_delegation = v;
    }
        conf.flg_digest = opts.flg_digest;
        conf.flg_disable = opts.flg_disable;
        conf.flg_disable_eprt = opts.flg_disable_eprt;
        conf.flg_disable_epsv = opts.flg_disable_epsv;
        conf.flg_disallow_username_in_url = opts.flg_disallow_username_in_url;
    if let Some(v) = opts.opt_dns_interface {
        conf.opt_dns_interface = v;
    }
    if let Some(v) = opts.opt_dns_ipv4_addr {
        conf.opt_dns_ipv4_addr = v;
    }
    if let Some(v) = opts.opt_dns_ipv6_addr {
        conf.opt_dns_ipv6_addr = v;
    }
    if let Some(v) = opts.opt_dns_servers {
        conf.opt_dns_servers = v;
    }
    if let Some(v) = opts.opt_doh_url {
        conf.opt_doh_url = v;
    }
    if let Some(v) = opts.opt_dump_header {
        conf.opt_dump_header = v;
    }
    if let Some(v) = opts.opt_egd_file {
        conf.opt_egd_file = v;
    }
    if let Some(v) = opts.opt_engine {
        conf.opt_engine = v;
    }
    if let Some(v) = opts.opt_etag_save {
        conf.opt_etag_save = v;
    }
    if let Some(v) = opts.opt_etag_compare {
        conf.opt_etag_compare = v;
    }
    if let Some(v) = opts.opt_expect100_timeout {
        conf.opt_expect100_timeout = v;
    }
        conf.flg_fail = opts.flg_fail;
        conf.flg_fail_early = opts.flg_fail_early;
        conf.flg_false_start = opts.flg_false_start;
    if let Some(v) = opts.opt_form {
        conf.opt_form = v;
    }
    if let Some(v) = opts.opt_form_string {
        conf.opt_form_string = v;
    }
    if let Some(v) = opts.opt_ftp_account {
        conf.opt_ftp_account = v;
    }
    if let Some(v) = opts.opt_ftp_alternative_to_user {
        conf.opt_ftp_alternative_to_user = v;
    }
        conf.flg_ftp_create_dirs = opts.flg_ftp_create_dirs;
    if let Some(v) = opts.opt_ftp_method {
        conf.opt_ftp_method = v;
    }
        conf.flg_ftp_pasv = opts.flg_ftp_pasv;
    if let Some(v) = opts.opt_ftp_port {
        conf.opt_ftp_port = v;
    }
        conf.flg_ftp_pret = opts.flg_ftp_pret;
        conf.flg_ftp_skip_pasv_ip = opts.flg_ftp_skip_pasv_ip;
        conf.flg_ftp_ssl_ccc = opts.flg_ftp_ssl_ccc;
    if let Some(v) = opts.opt_ftp_ssl_ccc_mode {
        conf.opt_ftp_ssl_ccc_mode = v;
    }
        conf.flg_ftp_ssl_control = opts.flg_ftp_ssl_control;
        conf.flg_get = opts.flg_get;
        conf.flg_globoff = opts.flg_globoff;
    if let Some(v) = opts.opt_happy_eyeballs_timeout_ms {
        conf.opt_happy_eyeballs_timeout_ms = v;
    }
        conf.flg_haproxy_protocol = opts.flg_haproxy_protocol;
        conf.flg_head = opts.flg_head;
    if let Some(v) = opts.opt_header {
        conf.opt_header = v;
    }
    if let Some(v) = opts.opt_hostpubmd5 {
        conf.opt_hostpubmd5 = v;
    }
        conf.flg_http0_9 = opts.flg_http0_9;
        conf.flg_http1_0 = opts.flg_http1_0;
        conf.flg_http1_1 = opts.flg_http1_1;
        conf.flg_http2 = opts.flg_http2;
        conf.flg_http2_prior_knowledge = opts.flg_http2_prior_knowledge;
        conf.flg_http3 = opts.flg_http3;
        conf.flg_ignore_content_length = opts.flg_ignore_content_length;
        conf.flg_include = opts.flg_include;
        conf.flg_insecure = opts.flg_insecure;
    if let Some(v) = opts.opt_interface {
        conf.opt_interface = v;
    }
        conf.flg_ipv4 = opts.flg_ipv4;
        conf.flg_ipv6 = opts.flg_ipv6;
        conf.flg_junk_session_cookies = opts.flg_junk_session_cookies;
    if let Some(v) = opts.opt_keepalive_time {
        conf.opt_keepalive_time = v;
    }
    if let Some(v) = opts.opt_key {
        conf.opt_key = v;
    }
    if let Some(v) = opts.opt_key_type {
        conf.opt_key_type = v;
    }
    if let Some(v) = opts.opt_krb {
        conf.opt_krb = v;
    }
    if let Some(v) = opts.opt_libcurl {
        conf.opt_libcurl = v;
    }
    if let Some(v) = opts.opt_limit_rate {
        conf.opt_limit_rate = v;
    }
        conf.flg_list_only = opts.flg_list_only;
    if let Some(v) = opts.opt_local_port {
        conf.opt_local_port = v;
    }
        conf.flg_location = opts.flg_location;
        conf.flg_location_trusted = opts.flg_location_trusted;
    if let Some(v) = opts.opt_login_options {
        conf.opt_login_options = v;
    }
    if let Some(v) = opts.opt_mail_auth {
        conf.opt_mail_auth = v;
    }
    if let Some(v) = opts.opt_mail_from {
        conf.opt_mail_from = v;
    }
    if let Some(v) = opts.opt_mail_rcpt {
        conf.opt_mail_rcpt = v;
    }
        conf.flg_manual = opts.flg_manual;
    if let Some(v) = opts.opt_max_filesize {
        conf.opt_max_filesize = v;
    }
    if let Some(v) = opts.opt_max_redirs {
        conf.opt_max_redirs = v;
    }
    if let Some(v) = opts.opt_max_time {
        conf.opt_max_time = v;
    }
        conf.flg_metalink = opts.flg_metalink;
        conf.flg_negotiate = opts.flg_negotiate;
        conf.flg_netrc = opts.flg_netrc;
    if let Some(v) = opts.opt_netrc_file {
        conf.opt_netrc_file = v;
    }
        conf.flg_netrc_optional = opts.flg_netrc_optional;
        conf.flg_next = opts.flg_next;
        conf.flg_no_alpn = opts.flg_no_alpn;
        conf.flg_no_buffer = opts.flg_no_buffer;
        conf.flg_no_keepalive = opts.flg_no_keepalive;
        conf.flg_no_npn = opts.flg_no_npn;
        conf.flg_no_progress_meter = opts.flg_no_progress_meter;
        conf.flg_no_sessionid = opts.flg_no_sessionid;
    if let Some(v) = opts.opt_noproxy {
        conf.opt_noproxy = v;
    }
        conf.flg_ntlm = opts.flg_ntlm;
        conf.flg_ntlm_wb = opts.flg_ntlm_wb;
    if let Some(v) = opts.opt_oauth2_bearer {
        conf.opt_oauth2_bearer = v;
    }
    if let Some(v) = opts.opt_output {
        conf.opt_output = v;
    }
        conf.flg_parallel = opts.flg_parallel;
        conf.flg_parallel_immediate = opts.flg_parallel_immediate;
        conf.flg_parallel_max = opts.flg_parallel_max;
    if let Some(v) = opts.opt_pass {
        conf.opt_pass = v;
    }
        conf.flg_path_as_is = opts.flg_path_as_is;
    if let Some(v) = opts.opt_pinnedpubkey {
        conf.opt_pinnedpubkey = v;
    }
        conf.flg_post301 = opts.flg_post301;
        conf.flg_post302 = opts.flg_post302;
        conf.flg_post303 = opts.flg_post303;
    if let Some(v) = opts.opt_preproxy {
        conf.opt_preproxy = v;
    }
        conf.flg_progress_bar = opts.flg_progress_bar;
    if let Some(v) = opts.opt_proto {
        conf.opt_proto = v;
    }
    if let Some(v) = opts.opt_proto_default {
        conf.opt_proto_default = v;
    }
    if let Some(v) = opts.opt_proto_redir {
        conf.opt_proto_redir = v;
    }
    if let Some(v) = opts.opt_proxy {
        conf.opt_proxy = v;
    }
        conf.flg_proxy_anyauth = opts.flg_proxy_anyauth;
        conf.flg_proxy_basic = opts.flg_proxy_basic;
    if let Some(v) = opts.opt_proxy_cacert {
        conf.opt_proxy_cacert = v;
    }
    if let Some(v) = opts.opt_proxy_capath {
        conf.opt_proxy_capath = v;
    }
    if let Some(v) = opts.opt_proxy_cert {
        conf.opt_proxy_cert = v;
    }
    if let Some(v) = opts.opt_proxy_cert_type {
        conf.opt_proxy_cert_type = v;
    }
    if let Some(v) = opts.opt_proxy_ciphers {
        conf.opt_proxy_ciphers = v;
    }
    if let Some(v) = opts.opt_proxy_crlfile {
        conf.opt_proxy_crlfile = v;
    }
        conf.flg_proxy_digest = opts.flg_proxy_digest;
    if let Some(v) = opts.opt_proxy_header {
        conf.opt_proxy_header = v;
    }
        conf.flg_proxy_insecure = opts.flg_proxy_insecure;
    if let Some(v) = opts.opt_proxy_key {
        conf.opt_proxy_key = v;
    }
    if let Some(v) = opts.opt_proxy_key_type {
        conf.opt_proxy_key_type = v;
    }
        conf.flg_proxy_negotiate = opts.flg_proxy_negotiate;
        conf.flg_proxy_ntlm = opts.flg_proxy_ntlm;
    if let Some(v) = opts.opt_proxy_pass {
        conf.opt_proxy_pass = v;
    }
    if let Some(v) = opts.opt_proxy_pinnedpubkey {
        conf.opt_proxy_pinnedpubkey = v;
    }
    if let Some(v) = opts.opt_proxy_service_name {
        conf.opt_proxy_service_name = v;
    }
        conf.flg_proxy_ssl_allow_beast = opts.flg_proxy_ssl_allow_beast;
    if let Some(v) = opts.opt_proxy_tls13_ciphers {
        conf.opt_proxy_tls13_ciphers = v;
    }
    if let Some(v) = opts.opt_proxy_tlsauthtype {
        conf.opt_proxy_tlsauthtype = v;
    }
    if let Some(v) = opts.opt_proxy_tlspassword {
        conf.opt_proxy_tlspassword = v;
    }
    if let Some(v) = opts.opt_proxy_tlsuser {
        conf.opt_proxy_tlsuser = v;
    }
        conf.flg_proxy_tlsv1 = opts.flg_proxy_tlsv1;
    if let Some(v) = opts.opt_proxy_user {
        conf.opt_proxy_user = v;
    }
    if let Some(v) = opts.opt_proxy1_0 {
        conf.opt_proxy1_0 = v;
    }
        conf.flg_proxytunnel = opts.flg_proxytunnel;
    if let Some(v) = opts.opt_pubkey {
        conf.opt_pubkey = v;
    }
        conf.flg_quote = opts.flg_quote;
    if let Some(v) = opts.opt_random_file {
        conf.opt_random_file = v;
    }
    if let Some(v) = opts.opt_range {
        conf.opt_range = v;
    }
        conf.flg_raw = opts.flg_raw;
    if let Some(v) = opts.opt_referer {
        conf.opt_referer = v;
    }
        conf.flg_remote_header_name = opts.flg_remote_header_name;
        conf.flg_remote_name = opts.flg_remote_name;
        conf.flg_remote_name_all = opts.flg_remote_name_all;
        conf.flg_remote_time = opts.flg_remote_time;
    if let Some(v) = opts.opt_request {
        conf.opt_request = v;
    }
        conf.flg_request_target = opts.flg_request_target;
    if let Some(v) = opts.opt_resolve {
        conf.opt_resolve = v;
    }
    if let Some(v) = opts.opt_retry {
        conf.opt_retry = v;
    }
        conf.flg_retry_connrefused = opts.flg_retry_connrefused;
    if let Some(v) = opts.opt_retry_delay {
        conf.opt_retry_delay = v;
    }
    if let Some(v) = opts.opt_retry_max_time {
        conf.opt_retry_max_time = v;
    }
    if let Some(v) = opts.opt_sasl_authzid {
        conf.opt_sasl_authzid = v;
    }
        conf.flg_sasl_ir = opts.flg_sasl_ir;
    if let Some(v) = opts.opt_service_name {
        conf.opt_service_name = v;
    }
        conf.flg_show_error = opts.flg_show_error;
        conf.flg_silent = opts.flg_silent;
    if let Some(v) = opts.opt_socks4 {
        conf.opt_socks4 = v;
    }
    if let Some(v) = opts.opt_socks4a {
        conf.opt_socks4a = v;
    }
    if let Some(v) = opts.opt_socks5 {
        conf.opt_socks5 = v;
    }
        conf.flg_socks5_basic = opts.flg_socks5_basic;
        conf.flg_socks5_gssapi = opts.flg_socks5_gssapi;
        conf.flg_socks5_gssapi_nec = opts.flg_socks5_gssapi_nec;
    if let Some(v) = opts.opt_socks5_gssapi_service {
        conf.opt_socks5_gssapi_service = v;
    }
    if let Some(v) = opts.opt_socks5_hostname {
        conf.opt_socks5_hostname = v;
    }
    if let Some(v) = opts.opt_speed_limit {
        conf.opt_speed_limit = v;
    }
    if let Some(v) = opts.opt_speed_time {
        conf.opt_speed_time = v;
    }
        conf.flg_ssl = opts.flg_ssl;
        conf.flg_ssl_allow_beast = opts.flg_ssl_allow_beast;
        conf.flg_ssl_no_revoke = opts.flg_ssl_no_revoke;
        conf.flg_ssl_reqd = opts.flg_ssl_reqd;
        conf.flg_sslv2 = opts.flg_sslv2;
        conf.flg_sslv3 = opts.flg_sslv3;
        conf.flg_stderr = opts.flg_stderr;
        conf.flg_styled_output = opts.flg_styled_output;
        conf.flg_suppress_connect_headers = opts.flg_suppress_connect_headers;
        conf.flg_tcp_fastopen = opts.flg_tcp_fastopen;
        conf.flg_tcp_nodelay = opts.flg_tcp_nodelay;
    if let Some(v) = opts.opt_telnet_option {
        conf.opt_telnet_option = v;
    }
    if let Some(v) = opts.opt_tftp_blksize {
        conf.opt_tftp_blksize = v;
    }
        conf.flg_tftp_no_options = opts.flg_tftp_no_options;
    if let Some(v) = opts.opt_time_cond {
        conf.opt_time_cond = v;
    }
    if let Some(v) = opts.opt_tls_max {
        conf.opt_tls_max = v;
    }
    if let Some(v) = opts.opt_tls13_ciphers {
        conf.opt_tls13_ciphers = v;
    }
    if let Some(v) = opts.opt_tlsauthtype {
        conf.opt_tlsauthtype = v;
    }
        conf.flg_tlspassword = opts.flg_tlspassword;
    if let Some(v) = opts.opt_tlsuser {
        conf.opt_tlsuser = v;
    }
        conf.flg_tlsv1 = opts.flg_tlsv1;
        conf.flg_tlsv1_0 = opts.flg_tlsv1_0;
        conf.flg_tlsv1_1 = opts.flg_tlsv1_1;
        conf.flg_tlsv1_2 = opts.flg_tlsv1_2;
        conf.flg_tlsv1_3 = opts.flg_tlsv1_3;
        conf.flg_tr_encoding = opts.flg_tr_encoding;
    if let Some(v) = opts.opt_trace {
        conf.opt_trace = v;
    }
    if let Some(v) = opts.opt_trace_ascii {
        conf.opt_trace_ascii = v;
    }
        conf.flg_trace_time = opts.flg_trace_time;
    if let Some(v) = opts.opt_unix_socket {
        conf.opt_unix_socket = v;
    }
    if let Some(v) = opts.opt_upload_file {
        conf.opt_upload_file = v;
    }
    if let Some(v) = opts.opt_url {
        conf.opt_url = v;
    }
        conf.flg_use_ascii = opts.flg_use_ascii;
    if let Some(v) = opts.opt_user {
        conf.opt_user = v;
    }
    if let Some(v) = opts.opt_user_agent {
        conf.opt_user_agent = v;
    }
        conf.flg_verbose = opts.flg_verbose;
    if let Some(v) = opts.opt_write_out {
        conf.opt_write_out = v;
    }
        conf.flg_xattr = opts.flg_xattr;

}
